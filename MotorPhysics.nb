(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    175493,       3786]
NotebookOptionsPosition[    157469,       3525]
NotebookOutlinePosition[    158431,       3556]
CellTagsIndexPosition[    158388,       3553]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Motor Physics", "Title",ExpressionUUID->"39796d72-87ca-4320-97ff-a98d4bd016ce"],

Cell["\<\
Robert Atkinson, Maddy Nguyen, Samantha Hordyk, Cole Welch, and John Fraser
22 July 2018\
\>", "Author",ExpressionUUID->"05aea015-05f3-4e99-899d-20a8cd5792a1"],

Cell["\<\
An exploration of the physics of motors, in both symbolic and numeric form. A \
basic but sufficiently-complete parameterized model of a motor is presented. \
The differential equations governing that model are exhibited, and, from \
those, the (frequency domain) transfer functions of each of the model\
\[CloseCurlyQuote]s variables is developed from first principles. Next, \
mathematical infrastructure for converting the response of general frequency \
domain functions input signals is developed, then applied to the transfer \
functions and their to applied-voltage and applied-torque inputs. This yields \
time domain functions for each of the model\[CloseCurlyQuote]s variables in \
terms of the (symbolic) value of the model\[CloseCurlyQuote]s variables. With \
those time domain symbolic functions in hand, the steady-state response of \
the motor as a function of each of the model\[CloseCurlyQuote]s parameters is \
explored.\
\>", "Text",ExpressionUUID->"56cc4ba9-b77c-4512-b3b4-73f00a3c0eee"],

Cell[CellGroupData[{

Cell["Administrivia", "Section",ExpressionUUID->"16299bc2-b6fe-451f-a825-e22a0f149c0f"],

Cell["We begin by loading some handy utilities.", "Text",ExpressionUUID->"7ad28d45-c772-4943-a312-e5b632c383c6"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
   "\"\<Utilities.m\>\""}], "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"00da5f52-c4e4-4d20-9d91-5577a43f3731"]
}, Closed]],

Cell[CellGroupData[{

Cell["Motor Model", "Section",ExpressionUUID->"90c0a6a0-9617-429d-8b1e-915f382134f2"],

Cell[TextData[{
 "The following gives a ",
 ButtonBox["conceptual overview",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.egr.msu.edu/classes/me451/jchoi/2008/"], None},
  ButtonNote->"http://www.egr.msu.edu/classes/me451/jchoi/2008/"],
 " of a DC motor (ref: ",
 ButtonBox["http://www.egr.msu.edu/classes/me451/jchoi/2008/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.egr.msu.edu/classes/me451/jchoi/2008/"], None},
  ButtonNote->"http://www.egr.msu.edu/classes/me451/jchoi/2008/"],
 ")."
}], "Text",ExpressionUUID->"069bbd6b-5932-4515-9ebe-d04ddcc6facb"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
C/D09ORdZ5mCRT39+V8KtYyk+jmPQC3n5eX122+/iY7cBLAJL168SElJKTwV
I53GDusjOqIBC0dkucWLFyclJSHXJScnw6zAsX79+mLk0eA1mM71joyMNJgO
HJ82bdqOHTvo6qZNm+D4+eefBwQEhIaG4uf+/fvnzZtHQmLBggUw/W+99RYC
QQmFwIAEhXuDBg3EyBw8eBCOrVq1QmMW0UBkzp8/36tXLzi2bdtW84ZL4eHh
MIJvvvkmWUNi6tSpt27d0ryRIVbLER00j5iIjkgWOOL2xo0bwwLiFRB57Zzr
c+fOubm5wX3ChAlQBYjVkiVLfH19S5cujUvWf4KoqCjYYkQMqY0boTr27t2L
MCGcunfvbpOYh4WFQYlpMadaERFu3rw51EWXLl3wBRMTE+kq8ifSkFQcNN6F
CxdWrFhRvXp1hCM2tZDgCARpAi0BhYmPe/jw4WXLlsEn3CE8NJ+xsbGIJBQd
3GvXrq19Gog661OJYfICVgi2ghVC7kHNjzoZlSpq0UIyCQFWA3X7qVOnJPfd
u3ernmmCpdgkJ4UAAwSD8uOPP0r+SSHAjEZERIjusKdw9/Hx8fPzE7vF0KQl
8SD2eKMhrJbfv//+u2HDhrpF2/IoQw7sbP/+/XHXlStXxEsvX76sUaMGzOue
PXtE9xs3bpQtWxZxMxcBCcQf8gCtbLV7EG18yDObx9yYWStCZVWqVEl8BIHI
I0pbt26VIoMmf926dTUXUgh42YEDB4o+r169iturVKkiBcsVyOsEsiuyBNo7
6qVHjx6h9oCW/vrrr6EtzQ0IolxrHU3p6ek7d+7cuHHjiRMnLI9nod0KwYnW
BA1m4S8egaBEP2jCIA7moi25mFMIqIvgCNGOt4Dyv3z5shoaoiq+3b179+Li
4g4cOGAh/uaiIYLXwdMlR7wpXhyRgQgXmzwaFhQCEgRNszlz5syePRv1le5X
k/zv27cP/ulxahWBEMRzNvEdET18QUSgR48edzOh7/vUhIXHPXz40HJ8igjU
c4uvn5aWhpQcM2ZMQcco26xatYr6BDQXUgjFixdHRlL9k0JAg1TN8C4uLrik
9TZodO7cGe7IbFlGZtasWfD51VdfSe42Vwhoy0sDH0bTXB1cQitbfQSa/7ik
2mVdGjRoAM+nT5/O0qetYm7MrBVh3NU5Fdu3bzdnx6OiokTxRgrB2dkZFaPk
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
yW7+KAD7+P7778M2NW3aVGrn5gU53lNRBG1/Ol4K0dYdFICxxlW0Uunn3bt3
YfRp4h/sGsy9l5cXTVb86KOPxAYy/h8xYgT59PT09PHxsbOzw//+/v7amDix
ceNGSk9XV1doFQSL/99+++2zZ89KkYF1IzHj5uZWt25d2FZ7e/vRo0dDJsER
jyNvMIi9evXCG9F7VapUydvbm2LSoUMH6zdJsDDDkGY/mruxRo0a6koHiIRJ
kyZRrDw8PBArShAEtXv3bilBDKbNluEHL4gHQduIj1YDh9iAcIJPfAsvE/gH
PwcPHiyNc+FGeqgabdpHi/dDYBiGyQGoPL+2COypNdv+24To6Gg8MSkpKZfh
wF5/9tln5nY3goSYPXu2dJggfs6fPx+SICgoCE31MWPGoLmte3tKSkpERESX
Ll3gbdSoUTt37lTHHYymc6BiYmIowGHDhm3ZssXcssR79+7hrbt27dqpU6eJ
EyeeP3/eaGpoL1iwAM8Sfaampi5duhR2E2FC1UA/iKcbWMOLFy8Q7IkTJ9RL
u3bt0tYPquzbt8/cbhjXrl2j+FOC/Pzzz7pvGhsbixeEzpk1a5b0Xnj0ihUr
dANH/gwPD+9sAv+Ys/WIGz6E6p6QkIBMpfuBGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhmHzg/wFV
vcow
    "], {{0, 462}, {694, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{417., Automatic},
  ImageSizeRaw->{694, 462},
  PlotRange->{{0, 694}, {0, 
   462}}]], "Input",ExpressionUUID->"6590bbd3-2095-440f-a5e8-f306149cd25a"]], \
"Text",ExpressionUUID->"b6384dc4-a9b0-4fe6-a82f-38e912f3c2c8"],

Cell["\<\
In addition to the the above, we allow here for an externally applied torque.\
\>", "Text",ExpressionUUID->"e710392c-a198-4e50-b222-3432fe3f5e70"],

Cell["\<\
With that considered, the state of the system can be described by the \
following variables.\
\>", "Text",ExpressionUUID->"0a22c47e-9b00-4bf1-9254-73e4cf6c4850"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["ea, ",
  FontSlant->"Italic"],
 "the applied voltage "
}], "Item",ExpressionUUID->"968adc87-2720-4902-b2fb-ec1e2b6d96ea"],

Cell[TextData[{
 StyleBox["i, ",
  FontSlant->"Italic"],
 "the armature current"
}], "Item",ExpressionUUID->"82f86dfb-bb1b-46f6-a183-c2a21d1e3bac"],

Cell[TextData[{
 StyleBox["e, ",
  FontSlant->"Italic"],
 "the back EMF "
}], "Item",ExpressionUUID->"88cf0f1a-32b1-4df8-9b14-c90017a50f3f"],

Cell["\[Theta], the angular position", "Item",ExpressionUUID->"38b2a308-670b-4e98-963c-77a294f17db4"],

Cell["\[Tau], the torque driven by the armature current", "Item",ExpressionUUID->"fb8c4c1a-0ead-4b9c-972f-b1488066f60b"],

Cell["\[Tau]a, the externally applied torque, if any", "Item",ExpressionUUID->"953ae3fd-09ab-474c-bb99-443d0ddb5619"]
}, Open  ]],

Cell["\<\
The parameter constants that characterize the motor are the following\
\>", "Text",ExpressionUUID->"b6f9cea5-8660-408a-b039-e11ace454546"],

Cell[CellGroupData[{

Cell["J, Moment of inertia ", "Item",ExpressionUUID->"91d49fa6-b0c4-4196-90fa-ec5d25332c72"],

Cell["b, Motor viscous drag constant ", "Item",ExpressionUUID->"4384aae8-0600-4454-9c35-53b8477f6597"],

Cell["Ke, Electromotive force constant ", "Item",ExpressionUUID->"992d2f87-f7da-4ce4-ad34-171c74343333"],

Cell["Kt, Motor torque constant ", "Item",ExpressionUUID->"8fa7c37a-0108-4049-a006-d4b00319de90"],

Cell["R, Electric resistance ", "Item",ExpressionUUID->"7f42c5d8-a245-4353-bd13-6069205022ac"],

Cell["L Electric inductance ", "Item",ExpressionUUID->"44eec874-8acc-48b7-8f59-0ac6dc689574"]
}, Open  ]],

Cell["\<\
Further, the moment of inertia J and viscous drag constant b can be \
decomposed into additive contributions from both the motor and the load; we\
\[CloseCurlyQuote]ll return to that later.\
\>", "Text",ExpressionUUID->"37037e49-176e-43e9-9eb8-b7acf8420e89"],

Cell[BoxData[
 RowBox[{"motorParameterNames", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "J", ",", " ", "b", ",", " ", "Ke", ",", " ", "Kt", ",", " ", "R", ",", 
    " ", "L"}], "}"}]}]], "Input",ExpressionUUID->"e040b396-c8fb-46d1-84d2-\
b04509a22dd7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Differential Equations", "Section",ExpressionUUID->"1a554150-f891-49e0-b217-91e08c954a90"],

Cell[CellGroupData[{

Cell["Differential Equation Development", "Subsubsection",ExpressionUUID->"53e5b2d3-df4b-4750-961d-abcbb0321454"],

Cell["\<\
The system can be modelled as a set of differential equations\
\>", "Text",ExpressionUUID->"80cda92d-dcb0-4796-8119-03250e858251"],

Cell[BoxData[
 RowBox[{"diffEqns", " ", "=", " ", 
  RowBox[{"{", "}"}]}]], "Input",
 CellLabel->
  "In[362]:=",ExpressionUUID->"01878dc0-fb64-42ed-a19d-253ca7d4944e"],

Cell["Drive torque is proportional to current.", "Text",ExpressionUUID->"5e5ddd7e-42a0-4096-b0f5-979e4869a40e"],

Cell[BoxData[
 RowBox[{"diffEqns", " ", "=", " ", 
  RowBox[{"Union", "[", 
   RowBox[{"diffEqns", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Tau]", "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"Kt", " ", 
       RowBox[{"i", "[", "t", "]"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[363]:=",ExpressionUUID->"96364580-987b-488d-9c78-e1d661a57f47"],

Cell["The back EMF is proportional to velocity.", "Text",ExpressionUUID->"131d42de-8a76-45a8-8dc9-fb34a8ba1ffc"],

Cell[BoxData[
 RowBox[{"diffEqns", " ", "=", " ", 
  RowBox[{"Union", "[", 
   RowBox[{"diffEqns", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"e", "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{"Ke", " ", 
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[364]:=",ExpressionUUID->"fa0980bf-045f-4e85-bdf9-6a435d52b716"],

Cell["\<\
Viscous drag reduces the torque, and what\[CloseCurlyQuote]s left accelerates \
the inertial mass. There is an external torque which is linearly dependant \
angular acceleration as well as having an entirely autonomous term (wherein \
in many applications is embodied a constant external-torque due to gravity).\
\>", "Text",ExpressionUUID->"a1bd4c06-792a-42a9-9433-f66837a16822"],

Cell[BoxData[{
 RowBox[{"motorParameterNames", " ", "=", " ", 
  RowBox[{"Union", "[", 
   RowBox[{"motorParameterNames", ",", " ", 
    RowBox[{"{", "\[Alpha]\[Tau]", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fn\[Tau]a", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"\[Alpha]\[Tau]", " ", 
    RowBox[{
     RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], " ", "+", " ", 
   RowBox[{"\[Tau]a", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"diffEqns", " ", "=", " ", 
  RowBox[{"Union", "[", 
   RowBox[{"diffEqns", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Tau]", "[", "t", "]"}], " ", "+", " ", 
       RowBox[{"fn\[Tau]a", "[", "t", "]"}], " ", "-", " ", 
       RowBox[{"b", " ", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}]}], " ", "\[Equal]", " ", 
      RowBox[{"J", " ", 
       RowBox[{
        RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[365]:=",ExpressionUUID->"aff7dd89-3c71-4eaf-90e7-da8727aec88f"],

Cell["\<\
The voltage drop across the resistive, inductive, and back EMF must equal the \
applied voltage (due to one of Kirchhoff\[CloseCurlyQuote]s laws).\
\>", "Text",ExpressionUUID->"3d7ae612-deb4-424e-98e8-f8997da3f234"],

Cell[BoxData[
 RowBox[{"diffEqns", " ", "=", " ", 
  RowBox[{"Union", "[", 
   RowBox[{"diffEqns", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ea", "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"R", " ", 
        RowBox[{"i", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"L", " ", 
        RowBox[{
         RowBox[{"i", "'"}], "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"e", "[", "t", "]"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[368]:=",ExpressionUUID->"a3dd3008-4e0c-4b93-bacf-b41f06764855"],

Cell[BoxData[
 RowBox[{"diffEqns", " ", "//", " ", "prettyPrint"}]], "Input",
 CellLabel->
  "In[369]:=",ExpressionUUID->"a6035ae8-1286-41cd-8182-fd83560bf599"]
}, Closed]],

Cell[CellGroupData[{

Cell["Initial Conditions", "Subsubsection",ExpressionUUID->"c6e71fee-f805-4855-bf73-77e856e2d111"],

Cell["Some of the initial conditions we can intuit intellectually:", "Text",ExpressionUUID->"5b3695bc-8604-4e75-a20b-44686fe7ade7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"initialConditions", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ea", "[", "0", "]"}], " ", "\[Equal]", " ", "\[Nu]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Tau]a", "[", "0", "]"}], " ", "\[Equal]", " ", 
      "\[CapitalTau]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellLabel->
  "In[370]:=",ExpressionUUID->"2ac838a0-51ff-45a5-9a9b-9ffcb46f6b87"],

Cell["Others we can solve for:", "Text",ExpressionUUID->"233512fc-bc6f-4acc-8926-3b47a273d6ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"others", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "'"}], "[", "0", "]"}], ",", " ", 
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], ",", " ", 
     RowBox[{
      RowBox[{"\[Theta]", "''"}], "[", "0", "]"}], ",", " ", 
     RowBox[{"\[Tau]", "[", "0", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"eqnsSubsKnownInitial", " ", "=", " ", 
    RowBox[{
     RowBox[{"diffEqns", " ", "/.", " ", 
      RowBox[{"t", " ", "\[Rule]", " ", "0"}]}], " ", "/.", " ", 
     RowBox[{"(", 
      RowBox[{"initialConditions", " ", "/.", " ", 
       RowBox[{"Equal", " ", "\[Rule]", " ", "Rule"}]}], ")"}]}]}], ")"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"solvedInitialConditions", " ", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"uniqueSolve", "[", 
       RowBox[{"eqnsSubsKnownInitial", ",", " ", "others"}], "]"}], " ", "/.",
       " ", 
      RowBox[{"Rule", " ", "\[Rule]", " ", "Equal"}]}], ")"}]}], ")"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"allInitialConditions", " ", "=", " ", 
    RowBox[{
    "solvedInitialConditions", " ", "~", "Join", "~", " ", 
     "initialConditions"}]}], ")"}], " ", "//", " ", 
  "prettyPrint"}]}], "Input",
 CellLabel->
  "In[371]:=",ExpressionUUID->"f7cc3dd9-953c-4fa9-a8b5-abdb91830726"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Motor Parameters", "Section",ExpressionUUID->"83ded34e-b899-4fea-a3fe-0d1a354f74e4"],

Cell["\<\
We now take a moment to carefully work out the units of each parameter and \
variable. Some units are obvious and clear. Let\[CloseCurlyQuote]s write \
those down.\
\>", "Text",ExpressionUUID->"51d84933-6794-4203-8b5a-e59fecb1d772"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"siTorqueUnits", " ", "=", " ", 
    RowBox[{
     RowBox[{"parseUnit", "[", "\"\<N m\>\"", "]"}], " ", "/", " ", 
     RowBox[{"parseUnit", "[", "\"\<Radians\>\"", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"parameterUnits", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"R", " ", "\[Rule]", " ", 
      RowBox[{"parseUnit", "[", "\"\<Ohms\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"L", " ", "\[Rule]", " ", 
      RowBox[{"parseUnit", "[", "\"\<Henrys\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", 
      RowBox[{"parseUnit", "[", "\"\<Radians\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", " ", 
      RowBox[{"parseUnit", "[", "\"\<Radians per Second\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]", "[", "t", "]"}], "\[Rule]", " ", 
      RowBox[{"parseUnit", "[", "\"\<Radians per Second\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Rule]", " ", 
      RowBox[{
      "parseUnit", "[", "\"\<Radians per Second per Second\>\"", "]"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "[", "t", "]"}], "\[Rule]", " ", 
      RowBox[{
      "parseUnit", "[", "\"\<Radians per Second per Second\>\"", "]"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "[", "t", "]"}], " ", "\[Rule]", " ", 
      RowBox[{"parseUnit", "[", "\"\<Amperes\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "'"}], "[", "t", "]"}], " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"parseUnit", "[", "\"\<Amperes\>\"", "]"}], " ", "/", " ", 
       RowBox[{"parseUnit", "[", "\"\<Second\>\"", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "''"}], "[", "t", "]"}], " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"parseUnit", "[", "\"\<Amperes\>\"", "]"}], " ", "/", " ", 
        RowBox[{"parseUnit", "[", "\"\<Second\>\"", "]"}]}], " ", "/", " ", 
       RowBox[{"parseUnit", "[", "\"\<Second\>\"", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ea", "[", "t", "]"}], " ", "\[Rule]", " ", 
      RowBox[{"parseUnit", "[", "\"\<Volts\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", "[", "t", "]"}], " ", "\[Rule]", " ", 
      RowBox[{"parseUnit", "[", "\"\<Volts\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Tau]", "[", "t", "]"}], " ", "\[Rule]", " ", 
      "siTorqueUnits"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Tau]a", "[", "t", "]"}], " ", "\[Rule]", " ", 
      "siTorqueUnits"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]\[Tau]", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"siTorqueUnits", " ", "/", " ", 
        RowBox[{"parseUnit", "[", "\"\<Radians\>\"", "]"}]}], " ", "*", " ", 
       RowBox[{
        RowBox[{"parseUnit", "[", "\"\<Seconds\>\"", "]"}], "^", "2"}]}]}]}], 
    "\[IndentingNewLine]", "}"}], " ", "//", " ", 
   "Association"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unitsToQuantities", "[", "units_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rules", ",", " ", "makeQuantity"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rules", " ", "=", " ", 
      RowBox[{"Normal", "[", "units", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"makeQuantity", " ", "=", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"param", ",", " ", "unit"}], "}"}], ",", " ", 
        RowBox[{"Quantity", "[", 
         RowBox[{"param", ",", " ", "unit"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"makeQuantity", " ", "@@", " ", "#"}]}], " ", "&"}], "/@", 
        " ", "rules"}], ")"}], " ", "//", " ", "Association"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"parameterQuantities", " ", "=", " ", 
  RowBox[{"unitsToQuantities", "[", "parameterUnits", "]"}]}]}], "Input",
 CellLabel->
  "In[399]:=",ExpressionUUID->"7e5d010c-ead5-4622-a414-9a1ac8beba8b"],

Cell["\<\
A note on units. The Bureau International des Poids et Mesures, the \
intergovernmental organization that standardizes the SI, officially refers to \
a radian as \[OpenCurlyDoubleQuote]a special name is given to the unit one, \
in order to facilitate the identification of the quantity involved\
\[CloseCurlyDoubleQuote] (Ref: \
https://www.bipm.org/en/publications/si-brochure/section2-2-3.html). With \
that as background, we have here chosen to include radians in all places in \
which they logically belong, as doing so provides valuable insight regarding \
the quantities being manipulated. Thus, for example, you will find here \
torque having units of N\[NonBreakingSpace]m\[NonBreakingSpace]/\
\[NonBreakingSpace]radian instead of N\[NonBreakingSpace]m, and the like. As, \
from the SI perspective, this amounts to multiplying or dividing by the unit \
one, no semantic change is effected. \
\>", "Text",ExpressionUUID->"c7295aa6-c0b2-47b6-9c76-b29a31c74b71"],

Cell[TextData[{
 "Aside: that \[OpenCurlyDoubleQuote]a special name given to the unit one\
\[CloseCurlyDoubleQuote] is in any way at all different than a first-class \
\[OpenCurlyDoubleQuote]unit\[CloseCurlyDoubleQuote] is a perspective \
reasonable only if one artificially and myopically limits one\
\[CloseCurlyQuote]s worldview to contain only the seven units whose dimension \
is necessarily ",
 StyleBox["experimentally",
  FontSlant->"Italic"],
 " calibrated as opposed to units whose dimension is mathematically or \
otherwise calibrated, such as radian, becquerel, motor encoder ticks, etc. \
And the world is chock-full of the latter. But this is a discussion for \
another time. See also Jacques E. Romain,  \[OpenCurlyDoubleQuote]Angl",
 StyleBox["e as a",
  IgnoreSpellCheck->True],
 " Fourth Fundamental Quantity\[CloseCurlyDoubleQuote], Journal of Research \
of the National Bureau of Standards-B. Mathematics and Mathematical Physics, \
Vol. 66B,  No. 3, July- September 1962."
}], "Text",ExpressionUUID->"44491675-64bd-46d1-9c19-e8c15c9e364e"],

Cell["\<\
Let\[CloseCurlyQuote]s look at how far our tabulation of parameter units \
takes us:\
\>", "Text",ExpressionUUID->"7480c0f7-09c8-4c49-aa24-492b926b6a19"],

Cell[BoxData[
 RowBox[{
  RowBox[{"diffEqns", " ", "/.", " ", "parameterQuantities"}], " ", "//", " ",
   "ColumnForm"}]], "Input",
 CellLabel->
  "In[403]:=",ExpressionUUID->"bd477aa7-e6c3-4ff3-af7a-88821be91010"],

Cell["\<\
We can see that if we write down the units for either b or J, the remaining \
units will be fully determined. We choose to specify J.\
\>", "Text",ExpressionUUID->"be830fe3-4aec-43f8-907d-9dacfd70f70d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"siAngularInertialUnits", " ", "=", " ", 
    RowBox[{
     RowBox[{"parseUnit", "[", "\"\<kg m^2\>\"", "]"}], " ", "/", " ", 
     RowBox[{"parseUnit", "[", "\"\<Radians^2\>\"", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parameterUnits", "[", "J", "]"}], " ", "=", " ", 
   "siAngularInertialUnits"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parameterQuantities", " ", "=", " ", 
   RowBox[{"unitsToQuantities", "[", "parameterUnits", "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEqns", " ", "/.", " ", "parameterQuantities"}], " ", "//", " ",
   "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{"remainingUnits", " ", "=", " ", 
  RowBox[{"uniqueSolve", "[", 
   RowBox[{
    RowBox[{"diffEqns", "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "4"}], "}"}], "]"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Ke", ",", " ", "Kt", ",", " ", "b"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[404]:=",ExpressionUUID->"ffe9c238-1615-4203-8bbd-814555438669"],

Cell["Let\[CloseCurlyQuote]s check how those work.", "Text",ExpressionUUID->"408f696d-6414-4c84-ae72-b28636983438"],

Cell[BoxData[
 RowBox[{"remainingUnits", " ", "/.", " ", "parameterQuantities"}]], "Input",
 CellLabel->
  "In[409]:=",ExpressionUUID->"f9f69377-76e6-4dc1-a8b7-0d71d65bc724"],

Cell["\<\
Huzzah! They check out (if the units were incompatible, Mathematica would\
\[CloseCurlyQuote]ve told us). Let\[CloseCurlyQuote]s the remaining units to \
our kit.\
\>", "Text",ExpressionUUID->"3b2cf630-a7b3-47c5-8fad-87f0338aec98"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"parameterUnits", "[", "#", "]"}], " ", "=", " ", 
     RowBox[{"QuantityUnit", "[", 
      RowBox[{"#", " ", "/.", " ", 
       RowBox[{"(", 
        RowBox[{"remainingUnits", " ", "/.", " ", "parameterQuantities"}], 
        ")"}]}], "]"}]}], ")"}], "&"}], "/@", " ", 
  RowBox[{"remainingUnits", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parameterQuantities", " ", "=", " ", 
   RowBox[{"unitsToQuantities", "[", "parameterUnits", "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"siAngularViscousDragUnits", " ", "=", " ", 
   RowBox[{
    RowBox[{"parseUnit", "[", "\"\<N m s\>\"", "]"}], " ", "/", " ", 
    RowBox[{"parseUnit", "[", "\"\<Radians^2\>\"", "]"}]}]}], ";"}]}], "Input",
 CellLabel->
  "In[410]:=",ExpressionUUID->"81a7fa61-e053-47d5-8b63-93b959eaf86d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Motor Parameters Redux", "Section",
 CellChangeTimes->{{3.740852893946665*^9, 3.7408529019722047`*^9}, {
  3.7408544006869607`*^9, 3.7408544036400614`*^9}, {3.7409423623869114`*^9, 
  3.7409423641531878`*^9}},ExpressionUUID->"35437d1a-fb19-4f67-9843-\
dfb07bb4bcc2"],

Cell[CellGroupData[{

Cell["On Ke & Kt", "Subsection",
 CellChangeTimes->{{3.7409426532766647`*^9, 3.7409426558797026`*^9}, {
  3.7410992404760313`*^9, 
  3.7410992467711926`*^9}},ExpressionUUID->"e6057ccb-102b-4850-b367-\
213a7608e29a"],

Cell["\<\
It is often remarked that, in compatible units, Ke & Kt have the same \
magnitude and sign. However, while often true, this relation does not always \
hold. Recall our differential equations:\
\>", "Text",
 CellChangeTimes->{{3.74094266034975*^9, 3.740942736881603*^9}, {
   3.740943052255858*^9, 3.740943052862236*^9}, 3.7409432389795237`*^9, {
   3.740944280420166*^9, 3.740944316313698*^9}, {3.7410053332890472`*^9, 
   3.7410053751895494`*^9}},ExpressionUUID->"07838fbb-cab7-4ec9-8954-\
1cc073c97a49"],

Cell[BoxData[
 RowBox[{"diffEqns", " ", "//", " ", "ColumnForm"}]], "Input",
 CellChangeTimes->{{3.7409428734190645`*^9, 3.740942880369478*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"0aaf1028-3d6c-478b-90e2-e053fa453486"],

Cell["In steady state, the current and speed are constant.", "Text",
 CellChangeTimes->{{3.7409429609868917`*^9, 3.7409430022799826`*^9}, {
   3.741088799934639*^9, 3.741088825201168*^9}, 
   3.7410889284646187`*^9},ExpressionUUID->"ca8b1857-040a-4217-8eb9-\
48edb7bcb30f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{"ssEqns", " ", "=", " ", 
    RowBox[{"diffEqns", " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"i", "'"}], "[", "t", "]"}], " ", "\[Rule]", " ", "0"}], ",",
        " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", "\[Rule]", " ", 
        "0"}]}], "}"}]}]}], ")"}], " ", "//", " ", 
  "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"ssEqns", " ", "=", " ", 
    RowBox[{"Eliminate", "[", 
     RowBox[{"ssEqns", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e", "[", "t", "]"}], ",", " ", "b"}], " ", "}"}]}], "]"}]}], 
   ")"}], " ", "//", " ", "ColumnForm"}]}], "Input",
 CellChangeTimes->{{3.740942971081895*^9, 3.7409430413091297`*^9}, {
   3.740943211755327*^9, 3.7409432178081384`*^9}, {3.7409432765899467`*^9, 
   3.740943313595539*^9}, {3.7410888362775493`*^9, 3.7410888480560493`*^9}, 
   3.741088916100602*^9},
 CellLabel->
  "In[237]:=",ExpressionUUID->"e1a40f32-ac8d-4099-93e4-d3771373f760"],

Cell[TextData[{
 "From a power point of view (ref: ",
 ButtonBox["https://bit.ly/2Lxka0Z",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://bit.ly/2Lxka0Z"], None},
  ButtonNote->"https://bit.ly/2Lxka0Z"],
 "), we must have (electrical) power in = (mechanical) power out + \
(electrical + other) power losses:"
}], "Text",
 CellChangeTimes->{{3.740943380999287*^9, 3.7409434535473137`*^9}, {
  3.740944375016767*^9, 3.7409443909920425`*^9}, {3.7409446467552447`*^9, 
  3.740944648143532*^9}, {3.7410055040781155`*^9, 3.7410055170753937`*^9}, {
  3.7410463316999683`*^9, 
  3.7410463320959063`*^9}},ExpressionUUID->"f9537848-f44c-4a5c-ba77-\
2e152a934589"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"powerEqns", " ", "=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pwrIn", " ", "==", " ", 
       RowBox[{
        RowBox[{"ea", "[", "t", "]"}], " ", 
        RowBox[{"i", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"pwrOut", " ", "==", " ", 
       RowBox[{
        RowBox[{"\[Tau]", "[", "t", "]"}], " ", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"pwrLosses", " ", "==", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"i", "[", "t", "]"}], "^", "2"}], " ", "R"}], " ", "+", " ",
         "pwrOtherPowerLosses"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"pwrIn", " ", "\[Equal]", " ", 
       RowBox[{"pwrOut", " ", "+", " ", "pwrLosses"}]}]}], 
     "\[IndentingNewLine]", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"ssPowerEqns", " ", "=", " ", 
    RowBox[{"ssEqns", " ", "~", "Join", "~", " ", "powerEqns"}]}], ")"}], " ",
   "//", " ", "prettyPrint"}]}], "Input",
 CellChangeTimes->{{3.740943426142564*^9, 3.74094342809235*^9}, {
   3.740943681885248*^9, 3.7409438619798355`*^9}, {3.74094389875948*^9, 
   3.7409439011052666`*^9}, {3.7409441114758987`*^9, 
   3.7409441118678493`*^9}, {3.7409441430385017`*^9, 3.740944146731618*^9}, {
   3.7409443448803043`*^9, 3.740944345922516*^9}, {3.7409443973231163`*^9, 
   3.740944399505278*^9}, {3.7409444457132273`*^9, 3.7409444819134536`*^9}, {
   3.7409446510168486`*^9, 3.740944654454653*^9}, 3.740944844475528*^9, {
   3.7409449866480308`*^9, 3.7409449874947643`*^9}, {3.741005530864521*^9, 
   3.74100555913351*^9}, {3.741046338093869*^9, 3.741046338626446*^9}, {
   3.7410887725174074`*^9, 3.7410887728859367`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"6d7509fc-10d3-4b8b-991a-475da98e8902"],

Cell["\<\
Let\[CloseCurlyQuote]s eliminate a few of the variables that we\
\[CloseCurlyQuote]re not interested in.\
\>", "Text",
 CellChangeTimes->{{3.7409441662982926`*^9, 3.7409442620557585`*^9}, {
  3.740944635854877*^9, 3.7409446425285487`*^9}, {3.7410889051977644`*^9, 
  3.7410889099739885`*^9}},ExpressionUUID->"73a478b7-c1a3-46c6-9721-\
f024004f74aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kBalanceEqns", " ", "=", " ", 
   RowBox[{"Eliminate", "[", 
    RowBox[{"ssPowerEqns", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Tau]", "[", "t", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ",", " ", 
       RowBox[{"ea", "[", "t", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"kBalanceEqns", " ", "//", " ", 
  "prettyPrint"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uniqueSolve", "[", 
   RowBox[{
    RowBox[{"kBalanceEqns", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", "pwrOtherPowerLosses"}], "]"}],
   " ", "/.", " ", 
  RowBox[{"Rule", " ", "\[Rule]", " ", "Equal"}]}]}], "Input",
 CellChangeTimes->{{3.7409439601190033`*^9, 3.740944085360736*^9}, {
   3.7409442091826105`*^9, 3.740944209803461*^9}, {3.7409445010034065`*^9, 
   3.740944586742691*^9}, {3.740944626410613*^9, 3.74094463009029*^9}, 
   3.7409446625759373`*^9, {3.7409447394483647`*^9, 3.7409447461255293`*^9}, {
   3.7409449110165825`*^9, 3.74094496010102*^9}, 3.7409449932713194`*^9, {
   3.74100556431568*^9, 3.741005564972924*^9}, 3.7410463470199995`*^9, {
   3.7410888976838517`*^9, 3.7410888977028008`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"26cefe99-e7b4-4185-8540-639030348efe"],

Cell["\<\
We can conclude that if other power losses are zero, then Ke must equal Kt.\
\>", "Text",
 CellChangeTimes->{{3.7409447299487677`*^9, 3.740944808881711*^9}, {
  3.7410055814434257`*^9, 3.741005582900565*^9}, {3.74104636045607*^9, 
  3.741046362223342*^9}},ExpressionUUID->"49066f9c-e89d-4bd8-a3c7-\
e80d679efe16"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experimental Motor Data", "Subsection",
 CellChangeTimes->{{3.7408550728012238`*^9, 3.740855074464774*^9}, {
  3.7409427604266376`*^9, 
  3.7409427829454217`*^9}},ExpressionUUID->"9e6870c9-aee7-4738-96e2-\
774bd074b689"],

Cell["\<\
We have experimental data from several motors (Nguyen, Hordyk, & Fraser, \
2017). We load in same.\
\>", "Text",
 CellChangeTimes->{{3.740856539407364*^9, 3.740856555001663*^9}, {
   3.740942864580701*^9, 3.740942871358576*^9}, 3.7409430493625937`*^9, {
   3.7409450476588774`*^9, 3.7409450916502385`*^9}, {3.741007586094574*^9, 
   3.7410075864396534`*^9}, {3.741007619656824*^9, 
   3.741007645170597*^9}},ExpressionUUID->"e50ff016-8b75-4ff3-b244-\
4be20694b4c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"motorData", " ", "=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", " ", 
       "\"\<Characterized Motors.xlsx\>\""}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Data\>\"", ",", " ", "1"}], "}"}]}], "]"}]}], ")"}], " ", 
  "//", " ", "TableForm"}]], "Input",
 CellChangeTimes->{{3.740855354230864*^9, 3.740855400315624*^9}, {
  3.7408554744862785`*^9, 3.74085550194485*^9}, {3.740855557590046*^9, 
  3.7408555904551563`*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"28b01b58-d16a-4fba-85ca-5e4ef3ce7df7"],

Cell["\<\
We build a function to retrieve data from the table. We convert from floating \
point to rational in order to help delay floating point collapse later on \
down the line. We allow for optional load inertia and viscous drag.\
\>", "Text",ExpressionUUID->"c242acf1-e800-4574-97a2-8e05a57da19f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"siAngularInertialUnits", " ", "=", " ", 
   RowBox[{
    RowBox[{"parseUnit", "[", "\"\<kg m^2\>\"", "]"}], " ", "/", " ", 
    RowBox[{"parseUnit", "[", "\"\<Radians^2\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"siAngularViscousDragUnits", " ", "=", " ", 
   RowBox[{
    RowBox[{"parseUnit", "[", "\"\<N m s\>\"", "]"}], " ", "/", " ", 
    RowBox[{"parseUnit", "[", "\"\<Radians^2\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"siTorqueUnits", " ", "=", " ", 
    RowBox[{
     RowBox[{"parseUnit", "[", "\"\<N m\>\"", "]"}], " ", "/", " ", 
     RowBox[{"parseUnit", "[", "\"\<Radians\>\"", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "motorParameters", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "motorParameters", "]"}], " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"JLoad", " ", "\[Rule]", " ", 
      RowBox[{"Quantity", "[", 
       RowBox[{"0", ",", " ", "siAngularInertialUnits"}], "]"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"bLoad", " ", "\[Rule]", " ", 
      RowBox[{"Quantity", "[", 
       RowBox[{"0", ",", " ", "siAngularViscousDragUnits"}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"motorParameters", "[", 
     RowBox[{"motorName_", ",", " ", 
      RowBox[{"opts", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "row", ",", " ", "paramValues", ",", " ", "quantify", ",", " ", 
        "assoc"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"row", " ", "=", " ", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"motorData", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
             "motorName"}], "&"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"paramValues", " ", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"toRational", "[", " ", 
            RowBox[{"row", "[", 
             RowBox[{"[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], " ", "]"}]}], 
          "&"}], "/@", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"J", ",", " ", "8"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"b", ",", " ", "3"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Ke", ",", " ", "4"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Kt", ",", " ", "4"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"R", ",", " ", "5"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"L", ",", " ", "7"}], "}"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"quantify", " ", "=", " ", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"name", ",", " ", "value"}], "}"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"name", " ", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"name", " ", "/.", " ", "parameterQuantities"}], ")"}], 
             " ", "/.", " ", 
             RowBox[{"name", " ", "\[Rule]", " ", "value"}]}], ")"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"assoc", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"quantify", " ", "@@", " ", "#"}], "&"}], "/@", " ", 
          "paramValues"}], " ", "//", " ", "Association"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"assoc", "[", "J", "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"assoc", "[", "J", "]"}], " ", "+", " ", 
         RowBox[{"OptionValue", "[", "JLoad", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"assoc", "[", "b", "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"assoc", "[", "b", "]"}], " ", "+", " ", 
         RowBox[{"OptionValue", "[", "bLoad", "]"}]}]}], ";", 
       "\[IndentingNewLine]", "assoc"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"motorParameters", "[", 
  RowBox[{"\"\<AM 60 A\>\"", ",", " ", 
   RowBox[{"JLoad", " ", "\[Rule]", " ", 
    RowBox[{"Quantity", "[", 
     RowBox[{"1", ",", " ", "siAngularInertialUnits"}], "]"}]}]}], 
  "]"}]}], "Input",
 CellLabel->
  "In[328]:=",ExpressionUUID->"c045c038-2447-4cd5-9514-e523fcb88088"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working Examples", "Subsection",ExpressionUUID->"a213b300-2f42-42f5-aa79-12f3a082bf95"],

Cell[CellGroupData[{

Cell["Example motors", "Subsubsection",ExpressionUUID->"60cffd46-6e1f-4f21-b92a-910287e9cd48"],

Cell["\<\
We define a motor with a load that we\[CloseCurlyQuote]ll use to illustrate \
examples. We also define a generic, abstract motor that can helps explore \
things symbolically\
\>", "Text",ExpressionUUID->"225713a5-64c4-4a91-8104-5b171bbb248d"],

Cell[BoxData[{"siAngularInertialUnits", "\[IndentingNewLine]", 
 RowBox[{"aMotor", " ", "=", " ", 
  RowBox[{"motorParameters", "[", 
   RowBox[{"\"\<AM 60 A\>\"", ",", " ", 
    RowBox[{"JLoad", " ", "\[Rule]", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"1", ",", " ", "siAngularInertialUnits"}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[255]:=",ExpressionUUID->"048fbe0f-ef04-48f1-a0b6-d274888f6c2b"],

Cell[BoxData[
 RowBox[{"genericMotor", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", " ", "\[Rule]", " ", 
     RowBox[{"(", 
      RowBox[{"#", " ", "/.", " ", "parameterQuantities"}], ")"}]}], "&"}], 
   " ", "/@", " ", "motorParameterNames"}]}]], "Input",
 CellLabel->
  "In[257]:=",ExpressionUUID->"4fd5c58e-a4d2-45d0-bd28-8f0bc5271d17"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Laplace Transforms and Transfer Function Models", "Section",ExpressionUUID->"a2873c61-b3a9-489c-98fd-08ae9788c004"],

Cell[CellGroupData[{

Cell["Laplace Transforms", "Subsection",ExpressionUUID->"073220d3-4653-40ac-8f57-370e53740b2f"],

Cell[TextData[{
 "Returning to the differential equations, we form the Laplace Transform of \
each, then solve the for the various transforms. First, we apply the \
LaplaceTransform[] function to each equation. It automatically makes use of \
the linearity of the transform, and insinuates itself just around the time \
dependent parts (ie: the parts dependent on the time variable we told it \
about, namely ",
 StyleBox["t",
  FontSlant->"Italic"],
 ")."
}], "Text",ExpressionUUID->"2e60eed2-901f-4e9f-b737-d3c91e621c19"],

Cell[BoxData[{
 RowBox[{"leqns", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{"#", ",", " ", "t", ",", " ", "s"}], "]"}], " ", "&"}], "/@", 
   " ", "diffEqns"}]}], "\[IndentingNewLine]", 
 RowBox[{"leqns", " ", "//", " ", "prettyPrint"}]}], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"a9a20bb6-32af-4293-8a1c-3bf2886ef783"],

Cell["\<\
Next, we walk those equations, picking up those insinuations and sowing them \
to the wind, reaping them on the outside, and finally removing duplicates\
\>", "Text",ExpressionUUID->"f9384391-fa35-4f73-82fb-a9b4688a8eb3"],

Cell[BoxData[
 RowBox[{"allXforms", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MatchQ", "[", 
            RowBox[{"#", ",", " ", "_LaplaceTransform"}], "]"}], ",", 
           RowBox[{"Sow", "[", "#", "]"}]}], "]"}], ")"}], "&"}], ",", 
       "leqns", ",", "Infinity"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "//", " ", 
   "Union"}]}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"4762b475-ab80-408f-b286-addb06147c6a"],

Cell["\<\
The voltage transform is input; all the others are outputs. Solve for the \
outputs. Finally substitute what we know about initial conditions, and \
simplify as much as we can.\
\>", "Text",ExpressionUUID->"df283c47-463b-43d5-b486-44aafbc0bb9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"voltageXform", " ", "=", " ", 
   RowBox[{"LaplaceTransform", "[", 
    RowBox[{
     RowBox[{"ea", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Tau]inXform", " ", "=", " ", 
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{"\[Tau]a", "[", "t", "]"}], ",", "t", ",", "s"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputXforms", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"voltageXform", ",", " ", "\[Tau]inXform"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"outputXorms", " ", "=", " ", 
  RowBox[{"Complement", "[", 
   RowBox[{"allXforms", ",", " ", "inputXforms"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rawSolvedXforms", " ", "=", " ", 
  RowBox[{"uniqueSolve", "[", 
   RowBox[{"leqns", ",", " ", "outputXorms"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rawSolvedXforms", " ", "=", " ", 
  RowBox[{
   RowBox[{"rawSolvedXforms", " ", "/.", " ", 
    RowBox[{"(", 
     RowBox[{"allInitialConditions", " ", "/.", " ", 
      RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], ")"}]}], " ", "//", " ", 
   "FullSimplify"}]}]}], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"fdd43856-c06d-404b-a623-ab6193fb5a15"],

Cell["\<\
We separate the transforms into applied-voltage- and applied-torque-dependent \
parts. \
\>", "Text",ExpressionUUID->"8c578d09-f613-435a-b6a5-12e9adf5bc1b"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"separate", ",", " ", "decompose", ",", " ", "inputLabels"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"separate", "[", "xform_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xformVarRules", ",", " ", "invertedRules", ",", " ", "xformVars", ",", 
      " ", "vard"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xformVarRules", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", " ", "\[Rule]", " ", 
         RowBox[{"Unique", "[", "\"\<laplaceTransform\>\"", "]"}]}], " ", 
        "&"}], " ", "/@", " ", "inputXforms"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"invertedRules", " ", "=", " ", 
      RowBox[{"Reverse", " ", "/@", " ", "xformVarRules"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xformVars", " ", "=", " ", 
      RowBox[{"xformVarRules", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vard", " ", "=", " ", 
      RowBox[{"xform", " ", "/.", " ", "xformVarRules"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Collect", "[", 
       RowBox[{"vard", ",", " ", "xformVars"}], "]"}], " ", "/.", " ", 
      "invertedRules"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"decompose", "[", "sum_", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"sum", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "/", " ", "voltageXform"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"sum", "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", "/", " ", "\[Tau]inXform"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputLabels", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<ea\>\"", ",", " ", "\"\<\[Tau]a\>\""}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solvedXforms", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"separate", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], " ", "&"}], " ", "/@", " ", 
    "rawSolvedXforms"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", " ", "//", " ", "ColumnForm"}]}], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"793cb62c-f831-44a0-84c6-f201fff3c88a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Transfer Function Models", "Subsection",ExpressionUUID->"75d1cd0e-edaa-4098-98a3-93baa23a7db5"],

Cell["\<\
We use the solved transforms to create TransferFunctionModel[]s for every \
variable of interest.\
\>", "Text",ExpressionUUID->"d4db16d4-bb95-42ef-8c8a-0ea39d90b16a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "makeModel", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeModel", "[", "var_", "]"}], " ", ":=", " ", 
  RowBox[{"makeModel", "[", 
   RowBox[{"var", ",", " ", 
    RowBox[{"ToString", "[", "var", "]"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeModel", "[", 
   RowBox[{"var_", ",", " ", "outputLabel_", ",", " ", "factor_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"TransferFunctionModel", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"factor", " ", "*", " ", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "sum", "}"}], ",", 
        RowBox[{"decompose", "[", "sum", "]"}]}], "]"}], 
      "\[IndentingNewLine]", "[", 
      RowBox[{
       RowBox[{"LaplaceTransform", "[", 
        RowBox[{
         RowBox[{"var", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], " ", "/.",
        " ", "solvedXforms"}], "]"}]}], ",", "\[IndentingNewLine]", "s", ",", 
    " ", "\[IndentingNewLine]", 
    RowBox[{"SystemsModelLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"inputLabels", ",", " ", "outputLabel"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"f8137d57-4145-4de0-93fb-05f467e72c0a"],

Cell[BoxData[{
 RowBox[{"motorPositionModel", " ", "=", " ", 
  RowBox[{"makeModel", "[", "\[Theta]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"motorVelocityModel", " ", "=", " ", 
  RowBox[{"makeModel", "[", 
   RowBox[{"\[Theta]", ",", " ", "\"\<\[CapitalOmega]\>\"", ",", " ", "s"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"motorAccelerationModel", " ", "=", " ", 
  RowBox[{"makeModel", "[", 
   RowBox[{"\[Theta]", ",", " ", "\"\<\[Alpha]\>\"", ",", " ", 
    RowBox[{"s", " ", "*", " ", "s"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"motorCurrentModel", " ", "=", " ", 
  RowBox[{"makeModel", "[", "i", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"motorEMFModel", " ", "=", " ", 
  RowBox[{"makeModel", "[", "e", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"motorTorqueModel", " ", "=", " ", 
  RowBox[{"makeModel", "[", "\[Tau]", "]"}]}]}], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"9523c233-8594-44c4-9af3-c19b86f37845"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Time Domain Functions", "Section",ExpressionUUID->"29ffe310-31d6-4b61-a8b7-c098b1593dfe"],

Cell["\<\
The time domain functions we seek model various states of the motor as a \
direct function of time. Generally speaking, we obtain them from the \
frequency domain by (matrix) multiplying the transfer function by the Laplace \
transform of the input signal, then taking the inverse Laplace transform of \
the result. However, if we\[CloseCurlyQuote]re starting with the (frequency \
domain) transfer function and the (time domain) input signal in-hand, we can \
compute the time domain function more efficiently using the Laplace transform \
convolution theorem.\
\>", "Text",ExpressionUUID->"e6f2d9ff-0869-47f2-990a-3026a4b5cb97"],

Cell[CellGroupData[{

Cell["Time Domain Output Functions", "Subsection",ExpressionUUID->"7f8583f3-a89a-49d2-8062-59e497c608c2"],

Cell[CellGroupData[{

Cell["makeTimeDomainFunctionLaplace[]", "Subsubsection",ExpressionUUID->"cb2c62c0-11f6-42ef-88aa-238256d7b9a5"],

Cell["\<\
makeTimeDomainFunctionLaplace[] computes the time domain function using the \
approach of obtaining everything in frequency domain then converting to time \
domain as a final step.\
\>", "Text",ExpressionUUID->"3e31534f-549d-4cab-9836-5f566653e497"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "makeTimeDomainFunctionLaplace", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeTimeDomainFunctionLaplace", "[", 
   RowBox[{"model_", ",", " ", "tInputFunctions_"}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", " ", "=", " ", 
       RowBox[{"Unique", "[", "\"\<s\>\"", "]"}]}], ",", " ", 
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"Unique", "[", "\"\<t\>\"", "]"}]}], ",", " ", "sInputs", ",", 
      " ", "sOutput", ",", " ", "tOutput"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sInputs", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"LaplaceTransform", "[", 
         RowBox[{
          RowBox[{"#", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}], "&"}], 
       " ", "/@", " ", "tInputFunctions"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sOutput", " ", "=", " ", 
      RowBox[{
       RowBox[{"model", "[", "s", "]"}], " ", ".", "  ", "sInputs"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tOutput", " ", "=", " ", 
      RowBox[{"InverseLaplaceTransform", "[", 
       RowBox[{"sOutput", ",", " ", "s", ",", " ", "t"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tOutput", " ", "/.", " ", 
       RowBox[{"t", "\[Rule]", " ", "#"}]}], "&"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",ExpressionUUID->"5fbb5bdb-2317-47c0-a641-5f816779bb8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["makeTimeDomainFunctionConvolve[]", "Subsubsection",ExpressionUUID->"15191bd9-3d4d-4444-ae73-6619326d22c6"],

Cell["\<\
makeTimeDomainFunctionConvolve[] uses  convolution and the theorem that the \
Laplace transform of a convolution is the product of the Laplace transform of \
the factors. Ref1: \
http://mathfaculty.fullerton.edu/mathews/c2003/laplaceconvolutionmod.html.\
\>", "Text",ExpressionUUID->"d3236b59-f9a7-474c-b139-fc7bc3ebb719"],

Cell["\<\
With the convolution approach, we can make explicit use of the fact that in \
the uses we have we know we want to take the inverse Laplace transform of a \
product, one of whose factors we already know the time domain inverse for, \
and thus we can avoid having LaplaceTransform[] do as much heavy lifting as \
we ask it to do in the other approach.\
\>", "Text",ExpressionUUID->"268b691b-fb93-401c-8977-e6a9bc2848de"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"makeTimeDomainFunctionConvolve", ",", " ", "convolve"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convolve", "[", 
    RowBox[{
    "fExpr_", ",", " ", "gExpr_", ",", " ", "exprVar_", ",", " ", "t_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Tau]", "=", 
       RowBox[{"Unique", "[", "\"\<\[Tau]\>\"", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{"t", " ", "\[GreaterEqual]", " ", "0"}], ",", " ", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"fExpr", " ", "/.", " ", 
            RowBox[{"exprVar", "\[Rule]", " ", "\[Tau]"}]}], ")"}], " ", "*", 
          " ", 
          RowBox[{"(", 
           RowBox[{"gExpr", " ", "/.", " ", 
            RowBox[{"exprVar", " ", "\[Rule]", " ", 
             RowBox[{"t", " ", "-", " ", "\[Tau]"}]}]}], ")"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", " ", "0", ",", " ", "t"}], "}"}]}], "]"}]}], 
      " ", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeTimeDomainFunctionConvolve", "[", 
   RowBox[{"model_", ",", " ", "tInputFunctions_"}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", " ", "=", " ", 
       RowBox[{"Unique", "[", "\"\<s\>\"", "]"}]}], ",", " ", 
      RowBox[{"\[Tau]", " ", "=", " ", 
       RowBox[{"Unique", "[", "\"\<\[Tau]\>\"", "]"}]}], ",", " ", 
      "modelExpr"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"modelExpr", " ", "=", " ", 
      RowBox[{
       RowBox[{"InverseLaplaceTransform", "[", 
        RowBox[{
         RowBox[{"model", "[", "s", "]"}], ",", " ", "s", ",", " ", 
         "\[Tau]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "convolutions", "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"convolutions", " ", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"convolve", "[", 
              RowBox[{
               RowBox[{"modelExpr", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"tInputFunctions", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ")"}], "[", "\[Tau]", "]"}],
                ",", "\[Tau]", ",", " ", "t"}], "]"}], " ", "&"}], "/@", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", "tInputFunctions", "]"}]}], "]"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"{", " ", 
           RowBox[{"Total", "[", "convolutions", "]"}], " ", "}"}]}]}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{"put", " ", "in", " ", "list", " ", "to", " ", "mirror", " ", 
          RowBox[{"InverseLaplaceTransform", "[", "]"}], " ", "output", " ", 
          "structure"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellLabel->
  "In[211]:=",ExpressionUUID->"05912473-8033-42df-934b-87130f855530"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Small Tests", "Subsubsection",ExpressionUUID->"36dbd464-3e69-4f8e-8c67-d907009a6558"],

Cell["A few tests comparing both approaches.", "Text",ExpressionUUID->"61f65358-5a60-49d7-9f7e-a9bb97e41e17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testModel", " ", "=", " ", 
   RowBox[{"TransferFunctionModel", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LaplaceTransform", "[", 
        RowBox[{"1", ",", " ", "t", ",", "s"}], "]"}], ",", " ", 
       RowBox[{"LaplaceTransform", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"7", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{"-", "t"}], "]"}]}]}], ")"}], ",", " ", "t", ",", "s"}], 
        "]"}]}], "}"}], ",", " ", "s", ",", " ", 
     RowBox[{"SystemsModelLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"inputLabels", ",", " ", "\"\<out\>\""}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"makeTimeDomainFunctionConvolve", " ", "@@", " ", "#"}], 
        ")"}], "[", "t", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"makeTimeDomainFunctionLaplace", " ", "@@", " ", "#"}], ")"}],
        "[", "t", "]"}]}], "}"}], "&"}], "/@", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TransferFunctionModel", "[", 
        RowBox[{
         RowBox[{"1", " ", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s", "^", "2"}], " ", "+", " ", "1"}], ")"}]}], ",", " ", 
         "s"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "#", "]"}]}], "&"}], "}"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{"Example", " ", "12.29", " ", "in", " ", "Ref1"}], "*)"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"testModel", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Nu]", "&"}], ",", " ", 
         RowBox[{"\[CapitalTau]", "&"}]}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", "//", " ", "ColumnForm"}]}], "Input",
 CellLabel->
  "In[214]:=",ExpressionUUID->"dcf6ccb3-5874-41cb-8a08-809ea53e0503"]
}, Closed]],

Cell[CellGroupData[{

Cell["makeMotorTimeDomainFunction[]", "Subsubsection",ExpressionUUID->"844c34d8-94ca-4cf1-87a6-720df21c94ea"],

Cell["\<\
makeMotorTimeDomainFunction[] takes a transfer function model and returns a \
function that, when provided with ea and \[Tau]a time-domain input functions, \
returns a function of time. \
\>", "Text",ExpressionUUID->"7acb3dca-08da-4795-b067-5dab190d891b"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "makeMotorTimeDomainFunction", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeMotorTimeDomainFunction", "[", "model_", "]"}], " ", ":=", " ", 
  RowBox[{"makeMotorTimeDomainFunction", "[", 
   RowBox[{"model", ",", " ", "makeTimeDomainFunctionConvolve"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeMotorTimeDomainFunction", "[", 
   RowBox[{"model_", ",", " ", "builder_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ea", " ", "=", " ", 
       RowBox[{"Unique", "[", "\"\<ea\>\"", "]"}]}], ",", " ", 
      RowBox[{"\[Tau]a", "=", 
       RowBox[{"Unique", "[", "\"\<\[Tau]a\>\"", "]"}]}], ",", " ", 
      RowBox[{"t", "=", 
       RowBox[{"Unique", "[", "\"\<t\>\"", "]"}]}], ",", " ", "expr"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"expr", "=", " ", 
      RowBox[{
       RowBox[{"builder", "[", 
        RowBox[{"model", ",", " ", 
         RowBox[{"{", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"1", "&"}], ","}], " ", "*)"}], 
          RowBox[{
           RowBox[{
            RowBox[{"ea", "[", "#", "]"}], "&"}], ",", " ", 
           RowBox[{
            RowBox[{"\[Tau]a", "[", "#", "]"}], "&"}]}], "}"}]}], "]"}], "[", 
       "t", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eaActual", ",", " ", "\[Tau]aActual"}], "}"}], ",", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "exprT", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"exprT", " ", "=", " ", 
           RowBox[{"expr", " ", "/.", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ea", " ", "\[Rule]", " ", "eaActual"}], ",", " ", 
              RowBox[{"\[Tau]a", " ", "\[Rule]", " ", "\[Tau]aActual"}]}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", "tActual", "}"}], ",", " ", 
            RowBox[{"exprT", " ", "/.", " ", 
             RowBox[{"t", " ", "\[Rule]", " ", "tActual"}]}]}], "]"}]}]}], 
        "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}]}]}], "Input",
 CellLabel->
  "In[216]:=",ExpressionUUID->"9f2df7a2-e59b-4441-96bd-3f3a470153e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Larger Tests", "Subsubsection",ExpressionUUID->"0d1dd2b1-b724-4eb3-afca-647c276f1092"],

Cell["\<\
We compare makeTimeDomainFunctionLaplace[] and \
makeTimeDomainFunctionConvolve[] on substantially-sized transfer functions. \
We see that, symbolically, for these tests they produce identical results, as \
they should. However, the makeTimeDomainFunctionConvolve[] approach is \
significantly faster, as therein we are asking InverseLaplaceTransform[] to \
significantly less heavy lifting. Moreover, and related to that point, the \
convolution approach is able to successfully compute time domain functions \
for some transfer functions and inputs that stymie \
makeTimeDomainFunctionLaplace[].\
\>", "Text",ExpressionUUID->"4dd1a616-076c-4760-812b-4e1a8288e7f0"],

Cell[BoxData[{
 RowBox[{"exampleConvolveE", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"makeMotorTimeDomainFunction", "[", 
      RowBox[{
      "motorVelocityModel", ",", " ", "makeTimeDomainFunctionConvolve"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{"\[Nu]", " ", "&"}], ",", " ", 
      RowBox[{"0", " ", "&"}]}], "]"}], "[", "t", "]"}], "//", " ", 
   "Timing"}]}], "\[IndentingNewLine]", 
 RowBox[{"exampleConvolve\[Tau]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"makeMotorTimeDomainFunction", "[", 
      RowBox[{
      "motorVelocityModel", ",", " ", "makeTimeDomainFunctionConvolve"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{"0", " ", "&"}], ",", " ", 
      RowBox[{"1", " ", "&"}]}], "]"}], "[", "t", "]"}], "//", " ", 
   "Timing"}]}]}], "Input",
 CellLabel->
  "In[219]:=",ExpressionUUID->"b15ad312-934c-4d7b-85bc-0ca34df4bf81"],

Cell[BoxData[{
 RowBox[{"exampleLaplaceE", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"makeMotorTimeDomainFunction", "[", 
      RowBox[{
      "motorVelocityModel", ",", " ", "makeTimeDomainFunctionLaplace"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{"\[Nu]", " ", "&"}], ",", " ", 
      RowBox[{"0", " ", "&"}]}], "]"}], "[", "t", "]"}], "//", " ", 
   "Timing"}]}], "\[IndentingNewLine]", 
 RowBox[{"exampleLaplace\[Tau]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"makeMotorTimeDomainFunction", "[", 
      RowBox[{
      "motorVelocityModel", ",", " ", "makeTimeDomainFunctionLaplace"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{"0", " ", "&"}], ",", " ", 
      RowBox[{"1", " ", "&"}]}], "]"}], "[", "t", "]"}], "//", " ", 
   "Timing"}]}]}], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"e513facb-cbc8-4e00-87d0-e1a70d5d6b70"],

Cell["\<\
At first glance, the two approaches look like they might be producing quite \
different results. However, a little bit of work verifies that the \
applied-voltage functions are the same.\
\>", "Text",ExpressionUUID->"f082f78a-9d38-4075-9e36-00fd55e8771b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"exampleConvolveE", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "//", " ", "Factor"}], " ", "//",
   " ", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exampleLaplaceE", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "//", " ", "Factor"}], " ", "//",
   " ", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"%%", " ", "/", " ", "%"}]}], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"f40d3e9c-e483-40c9-bb69-f84c36a52098"],

Cell["\<\
That the applied-torque functions are equivalent is a little harder to \
verify, but we do (finally) manage it with a bit more work than we needed for \
the applied-voltage functions.\
\>", "Text",ExpressionUUID->"a8fb986f-3439-4bee-918b-5b0816a04810"],

Cell[BoxData[{
 RowBox[{"convolvedFull", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"exampleConvolve\[Tau]", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "//", " ", "Expand"}], 
     " ", "//", " ", "FullSimplify"}], " ", "//", " ", "Expand"}], " ", "//", 
   " ", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"laplaceFull", "  ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"exampleLaplace\[Tau]", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "//", " ", "Expand"}], 
     " ", "//", " ", "FullSimplify"}], "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"convolvedFull", " ", "/", " ", "laplaceFull"}]}], "Input",
 CellLabel->
  "In[315]:=",ExpressionUUID->"9ea29673-5f8a-4a7a-9aa4-c798f783d2cb"],

Cell["Huzzah. Going forward, we will use the convolution approach.", "Text",ExpressionUUID->"b39dd1b4-bae4-4e80-bd62-c686c568a47e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Time Domain Output Functions for Motor State", "Subsubsection",ExpressionUUID->"d7e8c142-0eba-4444-b33c-55b5cc58b74a"],

Cell["\<\
We define time domain functions for all the motor state of interest.\
\>", "Text",ExpressionUUID->"3b85f158-80d8-4ce8-bba8-1a51e4747b04"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "motorPosition", ",", " ", "motorVelocity", ",", " ", "motorAcceleration", 
   ",", " ", "motorCurrent", ",", " ", "motorEMF", ",", "motorTorque"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"motorPosition", " ", "=", " ", 
   RowBox[{"makeMotorTimeDomainFunction", "[", "motorPositionModel", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"motorVelocity", " ", "=", " ", 
   RowBox[{"makeMotorTimeDomainFunction", "[", "motorVelocityModel", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"motorAcceleration", " ", "=", " ", 
   RowBox[{
   "makeMotorTimeDomainFunction", "[", "motorAccelerationModel", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"motorCurrent", " ", "=", " ", 
   RowBox[{"makeMotorTimeDomainFunction", "[", "motorCurrentModel", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"motorEMF", " ", "=", " ", 
   RowBox[{"makeMotorTimeDomainFunction", "[", "motorEMFModel", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"motorTorque", " ", "=", " ", 
   RowBox[{"makeMotorTimeDomainFunction", "[", "motorTorqueModel", "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[346]:=",ExpressionUUID->"985ea76b-d5ae-4847-8d9e-dcbc969e0e63"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Time Domain Input Functions", "Subsection",ExpressionUUID->"98bfabee-2222-47a8-8113-aa439d2d77da"],

Cell[CellGroupData[{

Cell["Keeping track of units", "Subsubsection",ExpressionUUID->"4b56c8c6-8400-43d1-a12b-602903b06b3c"],

Cell["\<\
In analogy to parameterQuantities above, we define inputQuantities,  which \
adds units to our input parameters.\
\>", "Text",ExpressionUUID->"ee919686-9297-47df-ad78-f0099c752dfc"],

Cell[BoxData["parameterQuantities"], "Input",
 CellLabel->
  "In[393]:=",ExpressionUUID->"81a8f5ca-bbdf-4926-b993-d4d200a6d744"],

Cell[BoxData[
 RowBox[{"inputQuantities", " ", "=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ea", " ", "\[Rule]", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"ea", ",", " ", "\"\<Volts\>\""}], "]"}]}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"\[Tau]a", "\[Rule]", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"\[Tau]a", ",", " ", "siTorqueUnits"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"c\[Tau]", " ", "\[Rule]", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"\[Tau]a", ",", " ", "siTorqueUnits"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"t", " ", "\[Rule]", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"t", ",", " ", "\"\<Seconds\>\""}], "]"}]}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellLabel->
  "In[394]:=",ExpressionUUID->"32a28296-3f0c-4580-91a5-98f91d7a4beb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mass on pulley", "Subsubsection",ExpressionUUID->"d9ab2832-77b4-4f81-9ab3-b8591744c52f"],

Cell["\<\
Here, we model a mass suspended on a massless \[OpenCurlyDoubleQuote]rigid \
string\[CloseCurlyDoubleQuote] from a massless pulley attached to the motor \
shaft. That string acts at a wrench with a length of the radius of the pulley \
to deliver a torque to the shaft. \[Tau]MassOnPulley[] computes that torque.\
\>", "Text",ExpressionUUID->"f0237f3e-3017-4e65-b4a1-291d613af758"],

Cell[TextData[{
 "There is a force pulling down on the mass due to gravity and up due to \
acceleration in the string that results from the driven angular acceleration \
of the shaft. The sum of these forces is the tension in the string. If the \
net acceleration is negative (ie: downward), a real (flexible) string would \
clamp at zero",
 StyleBox[" ",
  FontSlant->"Italic"],
 "and have the mass in free-fall; we choose not to model that for now. \
Instead, here, our hypothetical rigid string continues to impart acceleration \
from the pulley even for negative accelerations. This is a bit odd for a \
string, but more reasonable if the string were in fact a rigid arm being \
lifted, or some such."
}], "Text",ExpressionUUID->"1bd94ea3-df03-4d83-974f-db3537ba5e5c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Tau]MassOnPulley", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]MassOnPulley", "[", 
    RowBox[{"mass_", ",", " ", "radius_"}], "]"}], "[", "t_", "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gravityAcceleration", ",", " ", "gravityForce", ",", " ", 
      "angularAcceleration", ",", " ", "tangentialAcceleration", ",", " ", 
      "tangentialForce", ",", " ", "tension", ",", " ", "torque", ",", " ", 
      "unit", ",", " ", "parts", ",", 
      RowBox[{"radians", " ", "=", " ", 
       RowBox[{"Quantity", "[", "\"\<Radians\>\"", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "gravity", " ", "exerts", " ", "a", " ", "constant", " ", "force"}], " ",
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gravityAcceleration", " ", "=", " ", 
      RowBox[{
      "Quantity", "[", "\"\<StandardAccelerationOfGravity\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gravityForce", " ", "=", "  ", 
      RowBox[{"gravityAcceleration", " ", "*", " ", "mass"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "angular", " ", "accelearation", " ", "is", " ", "resisted", " ", "by",
         " ", "mass"}], ",", " ", 
       RowBox[{
       "creates", " ", "tangential", " ", "force", " ", "resisting", " ", 
        "acceleration"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"angularAcceleration", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", "/.", " ", 
       "parameterQuantities"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tangentialAcceleration", " ", "=", " ", 
      RowBox[{"angularAcceleration", " ", "*", " ", 
       RowBox[{"radius", " ", "/", " ", "radians"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tangentialForce", " ", "=", " ", 
      RowBox[{"tangentialAcceleration", " ", "*", " ", "mass"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"tension", " ", "=", " ", 
      RowBox[{"gravityForce", " ", "+", " ", "tangentialForce"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "tension", " ", "acts", " ", "like", " ", "a", " ", "wrench", " ", 
       "with", " ", "lever", " ", 
       RowBox[{"arm", " ", "'"}], 
       RowBox[{"radius", "'"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"torque", " ", "=", " ", 
      RowBox[{"tension", " ", "*", " ", 
       RowBox[{"radius", " ", "/", " ", "radians"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"unit", " ", "=", "  ", 
      RowBox[{"QuantityUnit", "[", "torque", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"parts", " ", "=", " ", 
      RowBox[{"List", " ", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"QuantityMagnitude", "[", "torque", "]"}], " ", "//", " ", 
         "Apart"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c\[Tau]", " ", "\[Rule]", " ", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"parts", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", "unit"}], "]"}]}], ",", 
       " ", 
       RowBox[{"\[Alpha]\[Tau]", " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"Quantity", "[", 
          RowBox[{
           RowBox[{"parts", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", "unit"}], "]"}], " ", 
         "/", " ", "angularAcceleration"}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]MassOnPulley", "[", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{"weightLbs", ",", " ", "\"\<Pounds\>\""}], "]"}], ",", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"rInches", ",", " ", "\"\<Inches\>\""}], "]"}]}], "]"}], "[", 
   "t", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", " ", "//", " ", "siUnits"}], " ", "//", " ", "clearUnits"}], 
  " ", "//", " ", "N"}]}], "Input",
 CellLabel->
  "In[430]:=",ExpressionUUID->"c611b885-1c4e-47ce-9850-9d32c796521a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Typical Input Examples", "Subsubsection",ExpressionUUID->"e977faae-01f5-4236-b800-01b71da0ac2e"],

Cell["\<\
In analogy to aMotor above, we now define  some typical inputs. The first has \
no externally applied torque.\
\>", "Text",ExpressionUUID->"315771bb-a9ef-4d30-98d6-098728ae805b"],

Cell[BoxData[
 RowBox[{"anInput", " ", "=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "\[Rule]", 
       RowBox[{"Quantity", "[", 
        RowBox[{"t", ",", " ", "\"\<Seconds\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ea", " ", "\[Rule]", " ", 
       RowBox[{"Quantity", "[", 
        RowBox[{"12", ",", " ", "\"\<Volts\>\""}], "]"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]a", "\[Rule]", " ", 
       RowBox[{"Quantity", "[", 
        RowBox[{"0", ",", " ", "siTorqueUnits"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]\[Tau]", "\[Rule]", 
       RowBox[{"Quantity", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]\[Tau]", "/.", "parameterUnits"}], ")"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[555]:=",ExpressionUUID->"05bfb66e-ec46-4118-8bc0-ae21e3b5a217"],

Cell["A second has external torque from a mass on a pulley.", "Text",ExpressionUUID->"9014c4fa-d02d-4506-83ea-a0b7c4412624"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]MassOnPulley", "[", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{"3", ",", " ", "\"\<Pounds\>\""}], "]"}], ",", " ", 
     RowBox[{"Quantity", "[", 
      RowBox[{"2", ",", " ", "\"\<Inches\>\""}], "]"}]}], "]"}], "[", "t", 
   "]"}], " ", "//", " ", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]MassOnPulley", "[", 
     RowBox[{
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", " ", "\"\<Pounds\>\""}], "]"}], ",", " ", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", " ", "\"\<Inches\>\""}], "]"}]}], "]"}], "[", "t", 
    "]"}], " ", "//", " ", "siUnits"}], " ", "//", " ", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{"anInputPulley", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", "\[Rule]", 
      RowBox[{"Quantity", "[", 
       RowBox[{"t", ",", " ", "\"\<Seconds\>\""}], "]"}]}], ",", 
     RowBox[{"ea", " ", "\[Rule]", " ", 
      RowBox[{"Quantity", "[", 
       RowBox[{"12", ",", " ", "\"\<Volts\>\""}], "]"}]}]}], "}"}], " ", "~", 
   "Join", "~", " ", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pulley", " ", "=", " ", 
       RowBox[{"\[Tau]MassOnPulley", "[", 
        RowBox[{
         RowBox[{"Quantity", "[", 
          RowBox[{"3", ",", " ", "\"\<Pounds\>\""}], "]"}], ",", " ", 
         RowBox[{"Quantity", "[", 
          RowBox[{"2", ",", " ", "\"\<Inches\>\""}], "]"}]}], "]"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"pulley", "[", "t", "]"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pulley", " ", "=", " ", 
       RowBox[{
        RowBox[{"pulley", "[", "t", "]"}], "//", " ", "siUnits"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Tau]a", " ", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"c\[Tau]", " ", "/.", " ", "pulley"}], ")"}]}], ",", " ", 
        RowBox[{"\[Alpha]\[Tau]", " ", "\[Rule]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]\[Tau]", " ", "/.", " ", "pulley"}], ")"}]}]}], 
       "}"}]}]}], "]"}]}]}]}], "Input",
 CellLabel->
  "In[556]:=",ExpressionUUID->"ee819cb0-68f2-454a-a0f4-684cac9e626f"],

Cell["A third leaves quantities with symbolic parameters", "Text",ExpressionUUID->"6afed1ed-4275-4932-a961-e5e7c1f23c30"],

Cell[BoxData[
 RowBox[{"aGenericInput\[Tau]", " ", "=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "\[Rule]", 
       RowBox[{"Quantity", "[", 
        RowBox[{"t", ",", " ", "\"\<Seconds\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ea", " ", "\[Rule]", " ", 
       RowBox[{"Quantity", "[", 
        RowBox[{"ea", ",", " ", "\"\<Volts\>\""}], "]"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]a", "\[Rule]", " ", 
       RowBox[{"Quantity", "[", 
        RowBox[{"c\[Tau]", ",", " ", "siTorqueUnits"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]\[Tau]", "\[Rule]", 
       RowBox[{"Quantity", "[", 
        RowBox[{"\[Alpha]\[Tau]", ",", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]\[Tau]", "/.", "parameterUnits"}], ")"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[559]:=",ExpressionUUID->"b296d0ea-d103-4068-8496-57429efd2956"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",ExpressionUUID->"24b06bbb-98d3-4d0c-a718-7295f84a58d4"],

Cell["\<\
We try out our time-domain functions on our example data. Notice how the \
units come out correctly: they flow automatically from beginning to end\
\>", "Text",ExpressionUUID->"8c01c9d8-c2c9-409f-9add-feb45182bcf5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"velExpr", " ", "=", "  ", 
   RowBox[{
    RowBox[{"motorVelocity", "[", 
     RowBox[{
      RowBox[{"ea", " ", "&"}], ",", " ", 
      RowBox[{"\[Tau]a", "&"}]}], "]"}], "[", "t", "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[561]:=",ExpressionUUID->"1867ac5c-695d-42a4-bde7-885cb8daee01"],

Cell[BoxData[
 RowBox[{"velExpr", " ", "//", " ", "variables"}]], "Input",
 CellLabel->
  "In[562]:=",ExpressionUUID->"62509384-eba8-40a8-890e-0b26f46f43bd"],

Cell[BoxData[
 RowBox[{
  FractionBox["33", "1000"], "+", 
  TemplateBox[{
   "0",RowBox[{
     "\"m\"", "\[ThinSpace]", "\"s\"", "\[ThinSpace]", "\"N\"", 
      "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
      SuperscriptBox["\"rad\"", "2"]}],
    "meter second newtons per radian squared",FractionBox[
     RowBox[{"\"Meters\"", " ", "\"Newtons\"", " ", "\"Seconds\""}], 
     SuperscriptBox["\"Radians\"", "2"]]},
   "Quantity"]}]], "Input",
 CellLabel->
  "In[566]:=",ExpressionUUID->"fb91e2ee-93d3-41a3-ae78-c313e2b4a798"],

Cell[BoxData[{
 RowBox[{
  FractionBox[
   SqrtBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["b", "2"], " ", 
      SuperscriptBox["L", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["J", "2"], " ", 
      SuperscriptBox["R", "2"]}], "+", 
     RowBox[{"2", " ", "b", " ", "L", " ", "R", " ", "\[Alpha]\[Tau]"}], "+", 
     RowBox[{"\[Alpha]\[Tau]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "Ke", " ", "Kt", " ", "L"}], "+", 
        RowBox[{
         SuperscriptBox["R", "2"], " ", "\[Alpha]\[Tau]"}]}], ")"}]}], "-", 
     RowBox[{"2", " ", "J", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "Ke", " ", "Kt", " ", "L"}], "+", 
        RowBox[{"R", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b", " ", "L"}], "+", 
           RowBox[{"R", " ", "\[Alpha]\[Tau]"}]}], ")"}]}]}], ")"}]}]}]], 
   RowBox[{
    RowBox[{"Ke", " ", "Kt"}], "+", 
    RowBox[{"b", " ", "R"}]}]], " "}], "\[IndentingNewLine]", 
 RowBox[{"%", " ", "/.", " ", "aMotor"}], "\[IndentingNewLine]", 
 RowBox[{"%", " ", "//", " ", "siUnits", " "}]}], "Input",
 CellLabel->
  "In[589]:=",ExpressionUUID->"6012ecc5-3227-462f-a49c-e6c8019f823f"],

Cell[BoxData[
 RowBox[{"velExpr", " "}]], "Input",
 CellLabel->
  "In[567]:=",ExpressionUUID->"0d30eee5-b9b0-46f6-a15b-06ad44158c2b"],

Cell[BoxData[
 RowBox[{"velExpr", " ", "/.", " ", "aMotor"}]], "Input",
 CellLabel->
  "In[568]:=",ExpressionUUID->"2432e384-cc2e-488b-ac90-ee1b846b6d04"],

Cell[BoxData[
 RowBox[{"velUnits", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"motorVelocity", "[", 
         RowBox[{
          RowBox[{"ea", " ", "&"}], ",", " ", 
          RowBox[{"\[Tau]a", "&"}]}], "]"}], "[", "t", "]"}], "  ", "/.", " ",
        "aMotor"}], " ", "/.", " ", "anInput"}], "//", " ", "N"}], "//", " ", 
    "siUnits"}], " ", "//", " ", "FullSimplify"}]}]], "Input",
 CellLabel->
  "In[535]:=",ExpressionUUID->"c2ce0f44-2933-4579-9948-bd1deb547d91"],

Cell[BoxData[{
 RowBox[{"vel", " ", "=", " ", 
  RowBox[{"velUnits", " ", "//", " ", "clearUnits"}]}], "\[IndentingNewLine]", 
 RowBox[{"vel\[Tau]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"motorVelocity", "[", 
          RowBox[{
           RowBox[{"ea", " ", "&"}], ",", " ", 
           RowBox[{"\[Tau]a", "&"}]}], "]"}], "[", "t", "]"}], "  ", "/.", 
        " ", "aMotor"}], " ", "/.", " ", "anInput\[Tau]"}], "//", " ", "N"}], 
     "//", " ", "siUnits"}], " ", "//", " ", "clearUnits"}], " ", "//", " ", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vel", ",", " ", "vel\[Tau]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"3fde6f5b-1629-4bbf-9656-f0843509606b"],

Cell["\<\
Good: the model with the (positive) external torque achieves greater \
velocity, as it should.\
\>", "Text",ExpressionUUID->"d3e1a406-42ce-440a-a83a-ba92b7c2d67c"],

Cell[BoxData[{
 RowBox[{"torUnits", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"motorTorque", "[", 
         RowBox[{
          RowBox[{"ea", " ", "&"}], ",", " ", 
          RowBox[{"\[Tau]a", "&"}]}], "]"}], "[", "t", "]"}], "  ", "/.", " ",
        "aMotor"}], " ", "/.", " ", "anInput"}], "//", " ", "N"}], "//", " ", 
    "siUnits"}], " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"tor\[Tau]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"motorTorque", "[", 
          RowBox[{
           RowBox[{"ea", " ", "&"}], ",", " ", 
           RowBox[{"\[Tau]a", "&"}]}], "]"}], "[", "t", "]"}], "  ", "/.", 
        " ", "aMotor"}], " ", "/.", " ", "anInput\[Tau]"}], "//", " ", "N"}], 
     "//", " ", "siUnits"}], " ", "//", " ", "clearUnits"}], " ", "//", " ", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"tor", " ", "=", " ", 
  RowBox[{"torUnits", " ", "//", " ", "clearUnits"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tor", ",", " ", "tor\[Tau]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"248a4e42-9143-4212-a7fa-75de1b7faf40"],

Cell[BoxData[{
 RowBox[{"posUnits", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"motorPosition", "[", 
         RowBox[{
          RowBox[{"ea", " ", "&"}], ",", " ", 
          RowBox[{"\[Tau]a", "&"}]}], "]"}], "[", "t", "]"}], "  ", "/.", " ",
        "aMotor"}], " ", "/.", " ", "anInput"}], "//", " ", "N"}], "//", " ", 
    "siUnits"}], " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"pos", " ", "=", " ", 
  RowBox[{"posUnits", " ", "//", " ", "clearUnits"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "pos", "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[88]:=",ExpressionUUID->"82a3648e-bd4f-493b-bfb0-5578ca7ecf7a"],

Cell[BoxData[{
 RowBox[{"curUnits", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"motorCurrent", "[", 
         RowBox[{
          RowBox[{"ea", " ", "&"}], ",", " ", 
          RowBox[{"\[Tau]a", "&"}]}], "]"}], "[", "t", "]"}], "  ", "/.", " ",
        "aMotor"}], " ", "/.", " ", "anInput"}], "//", " ", "N"}], "//", " ", 
    "siUnits"}], " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"cur", " ", "=", " ", 
  RowBox[{"curUnits", " ", "//", " ", "clearUnits"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "cur", "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[91]:=",ExpressionUUID->"d45ad4a4-321d-49cd-bf6e-62c7ca68797b"],

Cell[BoxData[{
 RowBox[{"emfUnits", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"motorEMF", "[", 
         RowBox[{
          RowBox[{"ea", " ", "&"}], ",", " ", 
          RowBox[{"\[Tau]a", "&"}]}], "]"}], "[", "t", "]"}], "  ", "/.", " ",
        "aMotor"}], " ", "/.", " ", "anInput"}], "//", " ", "N"}], "//", " ", 
    "siUnits"}], " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"emf", " ", "=", " ", 
  RowBox[{"emfUnits", " ", "//", " ", "clearUnits"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "emf", "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"67ca826d-3c61-44b8-9e55-1a1a12b7134b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Steady State", "Section",ExpressionUUID->"d2c23604-a292-44ee-87ff-043de8af44e6"],

Cell[CellGroupData[{

Cell["Calculating values", "Subsection",ExpressionUUID->"caf76008-1094-4dab-89d2-46ed4cc1fba0"],

Cell["\<\
We explore the steady state behavior. We can compute same either using the \
final value theorem, or directly by taking the limit (not shown here; \
previously verified). The former is definitely more efficient.\
\>", "Text",ExpressionUUID->"c8309336-5c77-441b-a04c-dede3d3eca2f"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "ssValue", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ssValue", "[", 
   RowBox[{"model_", ",", " ", "inputs_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", " ", 
       RowBox[{"Unique", "[", "]"}]}], ",", " ", 
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"Unique", "[", "]"}]}], ",", " ", "expr"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"expr", " ", "=", " ", 
      RowBox[{
       RowBox[{"model", "[", "s", "]"}], " ", ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"LaplaceTransform", "[", 
           RowBox[{
            RowBox[{"#", "[", "t", "]"}], ",", " ", "t", ",", " ", "s"}], 
           "]"}], " ", "&"}], "/@", " ", "inputs"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Limit", "[", 
       RowBox[{
        RowBox[{"s", " ", "expr"}], ",", " ", 
        RowBox[{"s", " ", "\[Rule]", " ", "0"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"6390bb3f-b7c5-41b8-8c19-384e6427f962"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"ss", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ssPos", " ", "\[Rule]", " ", 
       RowBox[{"ssValue", "[", 
        RowBox[{"motorPositionModel", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ea", "&"}], ",", " ", 
           RowBox[{"\[Tau]a", "&"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ssVel", " ", "\[Rule]", " ", 
       RowBox[{"ssValue", "[", 
        RowBox[{"motorVelocityModel", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ea", "&"}], ",", " ", 
           RowBox[{"\[Tau]a", "&"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ssAcc", " ", "\[Rule]", " ", 
       RowBox[{"ssValue", "[", 
        RowBox[{"motorAccelerationModel", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ea", "&"}], ",", " ", 
           RowBox[{"\[Tau]a", "&"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ssEmf", " ", "\[Rule]", " ", 
       RowBox[{"ssValue", "[", 
        RowBox[{"motorEMFModel", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ea", "&"}], ",", " ", 
           RowBox[{"\[Tau]a", "&"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ssCur", " ", "\[Rule]", " ", 
       RowBox[{"ssValue", "[", 
        RowBox[{"motorCurrentModel", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ea", "&"}], ",", " ", 
           RowBox[{"\[Tau]a", "&"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ssTor", " ", "\[Rule]", " ", 
       RowBox[{"ssValue", "[", 
        RowBox[{"motorTorqueModel", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ea", "&"}], ",", " ", 
           RowBox[{"\[Tau]a", "&"}]}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], ")"}], " ", "//", " ", 
  "prettyPrint"}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"a25c713e-9ba3-4635-b13e-e69c6cdae2ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Back EMF vs Applied Voltage", "Subsection",ExpressionUUID->"c37a253b-504f-4c0e-a54a-a3f483e112b3"],

Cell[TextData[{
 "We want to know the steady-state velocity",
 StyleBox[" ",
  FontSlant->"Italic"],
 "at which the back EMF balances the input voltage. Thus, we need EMF in \
terms of speed. We have EMF from voltage, and speed from voltage. So we need \
to invert the latter, then compose."
}], "Text",ExpressionUUID->"a19a5c8b-94b6-4833-85b3-9a3459728609"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "ssAppliedVoltageFromVelocity", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ssAppliedVoltageFromVelocity", "[", "velocity_", "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqn", ",", " ", 
      RowBox[{"velSym", " ", "=", " ", 
       RowBox[{"Unique", "[", "\"\<vel\>\"", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eqn", " ", "=", " ", 
      RowBox[{"velSym", " ", "==", 
       RowBox[{"(", 
        RowBox[{"ssVel", " ", "/.", "ss"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ea", " ", "/.", " ", 
       RowBox[{
        RowBox[{"uniqueSolve", "[", 
         RowBox[{"eqn", ",", " ", "ea"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "  ", "/.", " ", 
      RowBox[{"velSym", " ", "\[Rule]", " ", "velocity"}]}]}]}], " ", 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ssAppliedVoltageFromVelocity", "[", "\[CapitalOmega]", 
  "]"}]}], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"894db10f-0d70-4c25-857e-67b7ef9e6eef"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"ssEmfFromAppliedVoltage", ",", " ", "ssEmfFromVelocity"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ssEmfFromAppliedVoltage", "[", "voltage_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"ssEmf", " ", "/.", " ", "ss"}], ")"}], " ", "/.", " ", 
   RowBox[{"ea", " ", "\[Rule]", " ", "voltage"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ssEmfFromVelocity", "[", "velocity_", "]"}], " ", ":=", " ", 
   RowBox[{"ssEmfFromAppliedVoltage", "[", 
    RowBox[{"ssAppliedVoltageFromVelocity", "[", "velocity", "]"}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ssEmfFromVelocity", "[", "\[CapitalOmega]", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", " ", "FullSimplify"}]}], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"a62e61dc-6ffe-4b22-9bfc-d7a523b7fbbf"],

Cell["\<\
Well, that\[CloseCurlyQuote]s a result now, isn\[CloseCurlyQuote]t it? So, at \
what velocity do the two voltages balance?\
\>", "Text",ExpressionUUID->"9776aa99-8c44-4af1-b2b7-cb1030165ea4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ssEmfFromVelocity", "[", "\[CapitalOmega]", "]"}], " ", 
   "\[Equal]", " ", 
   RowBox[{"ssAppliedVoltageFromVelocity", "[", "\[CapitalOmega]", "]"}]}], 
  " ", "//", " ", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"uniqueSolve", "[", 
  RowBox[{"%", ",", " ", "\[CapitalOmega]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"emfThresholdVelocity", " ", "=", " ", 
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellLabel->
  "In[107]:=",ExpressionUUID->"d6f81e9c-0c49-406a-97e7-dc5900d0e9bf"],

Cell[TextData[{
 "That\[CloseCurlyQuote]s interesting: the equalizing velocity is dependent \
on the motor (through its viscous drag parameter), the external system \
(through the externally applied torque) but ",
 StyleBox["not ",
  FontSlant->"Italic"],
 "the externally applied voltage. Also: if there is no external torque, then \
the threshold velocity is zero, which is as it should be, since in that \
situation the back EMF can never match the externally applied voltage due to \
losses."
}], "Text",ExpressionUUID->"8e252db5-4198-4597-a1ab-ecb857025865"],

Cell["A quick check that the units are correct:", "Text",ExpressionUUID->"e4edc6bf-77e3-4be4-babe-48bd1ae41726"],

Cell[BoxData[
 RowBox[{
  RowBox[{"emfThresholdVelocity", " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", " ", "\[Rule]", " ", 
      RowBox[{"\[CapitalOmega]", "[", "t", "]"}]}], ",", " ", 
     RowBox[{"\[Tau]a", " ", "\[Rule]", " ", 
      RowBox[{"\[Tau]a", "[", "t", "]"}]}]}], "}"}]}], " ", "/.", " ", 
  "parameterQuantities"}]], "Input",
 CellLabel->
  "In[110]:=",ExpressionUUID->"98ecc5a6-5d46-4feb-9d9b-e0ebf3d9167a"],

Cell["\<\
What does this look like for an actual motor with our example weight attached?\
\>", "Text",ExpressionUUID->"4c774d77-3b73-430d-9ac3-b822f74ae385"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]", " ", "/.", " ", "emfThresholdVelocity"}], 
     "  ", "/.", " ", "aMotor"}], " ", "/.", " ", "anInput\[Tau]"}], " ", "//",
    " ", "siUnits"}], " ", "//", " ", "N"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{"%", ",", " ", "\"\<rpm\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnitConvert", "[", 
   RowBox[{"%", ",", " ", "\"\<Revolutions / Second\>\""}], "]"}], " ", "*", 
  " ", 
  RowBox[{"Quantity", "[", 
   RowBox[{"1120", ",", " ", 
    RowBox[{
     RowBox[{"IndependentUnit", "[", "\"\<Ticks\>\"", "]"}], " ", "/", " ", 
     "\"\<Revolutions\>\""}]}], "]"}]}]}], "Input",
 CellLabel->
  "In[111]:=",ExpressionUUID->"52cc7ae3-a547-434e-892f-a1f8b53a67b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1159, 1532},
WindowMargins->{{Automatic, 1095}, {-14, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
CellContext->Notebook,
TrackCellChangeTimes->False,
Magnification:>0.9 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Report"}, "StandardReport.nb", CharacterEncoding -> 
       "UTF-8"]]]}, WindowSize -> {775, 872}, 
  WindowMargins -> {{1405, Automatic}, {Automatic, 109}}, Visible -> False, 
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 85, 0, 86, "Title",ExpressionUUID->"39796d72-87ca-4320-97ff-a98d4bd016ce"],
Cell[668, 24, 169, 3, 56, "Author",ExpressionUUID->"05aea015-05f3-4e99-899d-20a8cd5792a1"],
Cell[840, 29, 1017, 14, 113, "Text",ExpressionUUID->"56cc4ba9-b77c-4512-b3b4-73f00a3c0eee"],
Cell[CellGroupData[{
Cell[1882, 47, 87, 0, 62, "Section",ExpressionUUID->"16299bc2-b6fe-451f-a825-e22a0f149c0f"],
Cell[1972, 49, 112, 0, 30, "Text",ExpressionUUID->"7ad28d45-c772-4943-a312-e5b632c383c6"],
Cell[2087, 51, 230, 5, 35, "Input",ExpressionUUID->"00da5f52-c4e4-4d20-9d91-5577a43f3731"]
}, Closed]],
Cell[CellGroupData[{
Cell[2354, 61, 85, 0, 50, "Section",ExpressionUUID->"90c0a6a0-9617-429d-8b1e-915f382134f2"],
Cell[2442, 63, 592, 14, 30, "Text",ExpressionUUID->"069bbd6b-5932-4515-9ebe-d04ddcc6facb"],
Cell[3037, 79, 62311, 1026, 270, "Text",ExpressionUUID->"b6384dc4-a9b0-4fe6-a82f-38e912f3c2c8"],
Cell[65351, 1107, 156, 2, 30, "Text",ExpressionUUID->"e710392c-a198-4e50-b222-3432fe3f5e70"],
Cell[65510, 1111, 171, 3, 30, "Text",ExpressionUUID->"0a22c47e-9b00-4bf1-9254-73e4cf6c4850"],
Cell[CellGroupData[{
Cell[65706, 1118, 148, 4, 26, "Item",ExpressionUUID->"968adc87-2720-4902-b2fb-ec1e2b6d96ea"],
Cell[65857, 1124, 147, 4, 26, "Item",ExpressionUUID->"82f86dfb-bb1b-46f6-a183-c2a21d1e3bac"],
Cell[66007, 1130, 140, 4, 26, "Item",ExpressionUUID->"88cf0f1a-32b1-4df8-9b14-c90017a50f3f"],
Cell[66150, 1136, 101, 0, 26, "Item",ExpressionUUID->"38b2a308-670b-4e98-963c-77a294f17db4"],
Cell[66254, 1138, 120, 0, 26, "Item",ExpressionUUID->"fb8c4c1a-0ead-4b9c-972f-b1488066f60b"],
Cell[66377, 1140, 117, 0, 26, "Item",ExpressionUUID->"953ae3fd-09ab-474c-bb99-443d0ddb5619"]
}, Open  ]],
Cell[66509, 1143, 148, 2, 30, "Text",ExpressionUUID->"b6f9cea5-8660-408a-b039-e11ace454546"],
Cell[CellGroupData[{
Cell[66682, 1149, 92, 0, 26, "Item",ExpressionUUID->"91d49fa6-b0c4-4196-90fa-ec5d25332c72"],
Cell[66777, 1151, 102, 0, 26, "Item",ExpressionUUID->"4384aae8-0600-4454-9c35-53b8477f6597"],
Cell[66882, 1153, 104, 0, 26, "Item",ExpressionUUID->"992d2f87-f7da-4ce4-ad34-171c74343333"],
Cell[66989, 1155, 97, 0, 26, "Item",ExpressionUUID->"8fa7c37a-0108-4049-a006-d4b00319de90"],
Cell[67089, 1157, 94, 0, 26, "Item",ExpressionUUID->"7f42c5d8-a245-4353-bd13-6069205022ac"],
Cell[67186, 1159, 93, 0, 26, "Item",ExpressionUUID->"44eec874-8acc-48b7-8f59-0ac6dc689574"]
}, Open  ]],
Cell[67294, 1162, 268, 4, 30, "Text",ExpressionUUID->"37037e49-176e-43e9-9eb8-b7acf8420e89"],
Cell[67565, 1168, 257, 6, 35, "Input",ExpressionUUID->"e040b396-c8fb-46d1-84d2-b04509a22dd7"]
}, Closed]],
Cell[CellGroupData[{
Cell[67859, 1179, 96, 0, 50, "Section",ExpressionUUID->"1a554150-f891-49e0-b217-91e08c954a90"],
Cell[CellGroupData[{
Cell[67980, 1183, 113, 0, 30, "Subsubsection",ExpressionUUID->"53e5b2d3-df4b-4750-961d-abcbb0321454"],
Cell[68096, 1185, 140, 2, 30, "Text",ExpressionUUID->"80cda92d-dcb0-4796-8119-03250e858251"],
Cell[68239, 1189, 167, 4, 35, "Input",ExpressionUUID->"01878dc0-fb64-42ed-a19d-253ca7d4944e"],
Cell[68409, 1195, 111, 0, 30, "Text",ExpressionUUID->"5e5ddd7e-42a0-4096-b0f5-979e4869a40e"],
Cell[68523, 1197, 383, 10, 35, "Input",ExpressionUUID->"96364580-987b-488d-9c78-e1d661a57f47"],
Cell[68909, 1209, 112, 0, 30, "Text",ExpressionUUID->"131d42de-8a76-45a8-8dc9-fb34a8ba1ffc"],
Cell[69024, 1211, 413, 12, 35, "Input",ExpressionUUID->"fa0980bf-045f-4e85-bdf9-6a435d52b716"],
Cell[69440, 1225, 390, 5, 51, "Text",ExpressionUUID->"a1bd4c06-792a-42a9-9433-f66837a16822"],
Cell[69833, 1232, 1070, 28, 72, "Input",ExpressionUUID->"aff7dd89-3c71-4eaf-90e7-da8727aec88f"],
Cell[70906, 1262, 225, 3, 30, "Text",ExpressionUUID->"3d7ae612-deb4-424e-98e8-f8997da3f234"],
Cell[71134, 1267, 557, 15, 35, "Input",ExpressionUUID->"a3dd3008-4e0c-4b93-bacf-b41f06764855"],
Cell[71694, 1284, 160, 3, 35, "Input",ExpressionUUID->"a6035ae8-1286-41cd-8182-fd83560bf599"]
}, Closed]],
Cell[CellGroupData[{
Cell[71891, 1292, 98, 0, 30, "Subsubsection",ExpressionUUID->"c6e71fee-f805-4855-bf73-77e856e2d111"],
Cell[71992, 1294, 131, 0, 30, "Text",ExpressionUUID->"5b3695bc-8604-4e75-a20b-44686fe7ade7"],
Cell[72126, 1296, 804, 21, 144, "Input",ExpressionUUID->"2ac838a0-51ff-45a5-9a9b-9ffcb46f6b87"],
Cell[72933, 1319, 95, 0, 30, "Text",ExpressionUUID->"233512fc-bc6f-4acc-8926-3b47a273d6ad"],
Cell[73031, 1321, 1429, 41, 90, "Input",ExpressionUUID->"f7cc3dd9-953c-4fa9-a8b5-abdb91830726"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[74509, 1368, 90, 0, 50, "Section",ExpressionUUID->"83ded34e-b899-4fea-a3fe-0d1a354f74e4"],
Cell[74602, 1370, 242, 4, 30, "Text",ExpressionUUID->"51d84933-6794-4203-8b5a-e59fecb1d772"],
Cell[74847, 1376, 4695, 115, 468, "Input",ExpressionUUID->"7e5d010c-ead5-4622-a414-9a1ac8beba8b"],
Cell[79545, 1493, 977, 14, 113, "Text",ExpressionUUID->"c7295aa6-c0b2-47b6-9c76-b29a31c74b71"],
Cell[80525, 1509, 1060, 18, 113, "Text",ExpressionUUID->"44491675-64bd-46d1-9c19-e8c15c9e364e"],
Cell[81588, 1529, 163, 3, 30, "Text",ExpressionUUID->"7480c0f7-09c8-4c49-aa24-492b926b6a19"],
Cell[81754, 1534, 214, 5, 35, "Input",ExpressionUUID->"bd477aa7-e6c3-4ff3-af7a-88821be91010"],
Cell[81971, 1541, 212, 3, 30, "Text",ExpressionUUID->"be830fe3-4aec-43f8-907d-9dacfd70f70d"],
Cell[82186, 1546, 1144, 30, 126, "Input",ExpressionUUID->"ffe9c238-1615-4203-8bbd-814555438669"],
Cell[83333, 1578, 115, 0, 30, "Text",ExpressionUUID->"408f696d-6414-4c84-ae72-b28636983438"],
Cell[83451, 1580, 174, 3, 35, "Input",ExpressionUUID->"f9f69377-76e6-4dc1-a8b7-0d71d65bc724"],
Cell[83628, 1585, 241, 4, 30, "Text",ExpressionUUID->"3b2cf630-a7b3-47c5-8fad-87f0338aec98"],
Cell[83872, 1591, 938, 24, 72, "Input",ExpressionUUID->"81a7fa61-e053-47d5-8b63-93b959eaf86d"]
}, Closed]],
Cell[CellGroupData[{
Cell[84847, 1620, 272, 4, 50, "Section",ExpressionUUID->"35437d1a-fb19-4f67-9843-dfb07bb4bcc2"],
Cell[CellGroupData[{
Cell[85144, 1628, 215, 4, 31, "Subsection",ExpressionUUID->"e6057ccb-102b-4850-b367-213a7608e29a"],
Cell[85362, 1634, 515, 9, 51, "Text",ExpressionUUID->"07838fbb-cab7-4ec9-8954-1cc073c97a49"],
Cell[85880, 1645, 227, 4, 35, "Input",ExpressionUUID->"0aaf1028-3d6c-478b-90e2-e053fa453486"],
Cell[86110, 1651, 273, 4, 30, "Text",ExpressionUUID->"ca8b1857-040a-4217-8eb9-48edb7bcb30f"],
Cell[86386, 1657, 1108, 30, 54, "Input",ExpressionUUID->"e1a40f32-ac8d-4099-93e4-d3771373f760"],
Cell[87497, 1689, 665, 15, 30, "Text",ExpressionUUID->"f9537848-f44c-4a5c-ba77-2e152a934589"],
Cell[88165, 1706, 1929, 41, 144, "Input",ExpressionUUID->"6d7509fc-10d3-4b8b-991a-475da98e8902"],
Cell[90097, 1749, 359, 7, 30, "Text",ExpressionUUID->"73a478b7-c1a3-46c6-9721-f024004f74aa"],
Cell[90459, 1758, 1354, 30, 72, "Input",ExpressionUUID->"26cefe99-e7b4-4185-8540-639030348efe"],
Cell[91816, 1790, 323, 6, 30, "Text",ExpressionUUID->"49066f9c-e89d-4bd8-a3c7-e80d679efe16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92176, 1801, 226, 4, 31, "Subsection",ExpressionUUID->"9e6870c9-aee7-4738-96e2-774bd074b689"],
Cell[92405, 1807, 475, 9, 30, "Text",ExpressionUUID->"e50ff016-8b75-4ff3-b244-4be20694b4c8"],
Cell[92883, 1818, 640, 16, 35, "Input",ExpressionUUID->"28b01b58-d16a-4fba-85ca-5e4ef3ce7df7"],
Cell[93526, 1836, 302, 4, 51, "Text",ExpressionUUID->"c242acf1-e800-4574-97a2-8e05a57da19f"],
Cell[93831, 1842, 5003, 126, 414, "Input",ExpressionUUID->"c045c038-2447-4cd5-9514-e523fcb88088"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98871, 1973, 93, 0, 31, "Subsection",ExpressionUUID->"a213b300-2f42-42f5-aa79-12f3a082bf95"],
Cell[CellGroupData[{
Cell[98989, 1977, 94, 0, 30, "Subsubsection",ExpressionUUID->"60cffd46-6e1f-4f21-b92a-910287e9cd48"],
Cell[99086, 1979, 252, 4, 30, "Text",ExpressionUUID->"225713a5-64c4-4a91-8104-5b171bbb248d"],
Cell[99341, 1985, 423, 9, 54, "Input",ExpressionUUID->"048fbe0f-ef04-48f1-a0b6-d274888f6c2b"],
Cell[99767, 1996, 351, 9, 35, "Input",ExpressionUUID->"4fd5c58e-a4d2-45d0-bd28-8f0bc5271d17"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[100179, 2012, 121, 0, 50, "Section",ExpressionUUID->"a2873c61-b3a9-489c-98fd-08ae9788c004"],
Cell[CellGroupData[{
Cell[100325, 2016, 95, 0, 31, "Subsection",ExpressionUUID->"073220d3-4653-40ac-8f57-370e53740b2f"],
Cell[100423, 2018, 523, 10, 72, "Text",ExpressionUUID->"2e60eed2-901f-4e9f-b737-d3c91e621c19"],
Cell[100949, 2030, 374, 8, 54, "Input",ExpressionUUID->"a9a20bb6-32af-4293-8a1c-3bf2886ef783"],
Cell[101326, 2040, 231, 3, 30, "Text",ExpressionUUID->"f9384391-fa35-4f73-82fb-a9b4688a8eb3"],
Cell[101560, 2045, 645, 18, 35, "Input",ExpressionUUID->"4762b475-ab80-408f-b286-addb06147c6a"],
Cell[102208, 2065, 255, 4, 30, "Text",ExpressionUUID->"df283c47-463b-43d5-b486-44aafbc0bb9b"],
Cell[102466, 2071, 1251, 31, 126, "Input",ExpressionUUID->"fdd43856-c06d-404b-a623-ab6193fb5a15"],
Cell[103720, 2104, 166, 3, 30, "Text",ExpressionUUID->"8c578d09-f613-435a-b6a5-12e9adf5bc1b"],
Cell[103889, 2109, 2435, 63, 252, "Input",ExpressionUUID->"793cb62c-f831-44a0-84c6-f201fff3c88a"]
}, Closed]],
Cell[CellGroupData[{
Cell[106361, 2177, 101, 0, 31, "Subsection",ExpressionUUID->"75d1cd0e-edaa-4098-98a3-93baa23a7db5"],
Cell[106465, 2179, 176, 3, 30, "Text",ExpressionUUID->"d4db16d4-bb95-42ef-8c8a-0ea39d90b16a"],
Cell[106644, 2184, 1246, 31, 144, "Input",ExpressionUUID->"f8137d57-4145-4de0-93fb-05f467e72c0a"],
Cell[107893, 2217, 944, 17, 126, "Input",ExpressionUUID->"9523c233-8594-44c4-9af3-c19b86f37845"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[108886, 2240, 95, 0, 50, "Section",ExpressionUUID->"29ffe310-31d6-4b61-a8b7-c098b1593dfe"],
Cell[108984, 2242, 640, 9, 93, "Text",ExpressionUUID->"e6f2d9ff-0869-47f2-990a-3026a4b5cb97"],
Cell[CellGroupData[{
Cell[109649, 2255, 105, 0, 31, "Subsection",ExpressionUUID->"7f8583f3-a89a-49d2-8062-59e497c608c2"],
Cell[CellGroupData[{
Cell[109779, 2259, 111, 0, 30, "Subsubsection",ExpressionUUID->"cb2c62c0-11f6-42ef-88aa-238256d7b9a5"],
Cell[109893, 2261, 259, 4, 51, "Text",ExpressionUUID->"3e31534f-549d-4cab-9836-5f566653e497"],
Cell[110155, 2267, 1487, 35, 162, "Input",ExpressionUUID->"5fbb5bdb-2317-47c0-a641-5f816779bb8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111679, 2307, 112, 0, 30, "Subsubsection",ExpressionUUID->"15191bd9-3d4d-4444-ae73-6619326d22c6"],
Cell[111794, 2309, 332, 5, 51, "Text",ExpressionUUID->"d3236b59-f9a7-474c-b139-fc7bc3ebb719"],
Cell[112129, 2316, 428, 6, 72, "Text",ExpressionUUID->"268b691b-fb93-401c-8977-e6a9bc2848de"],
Cell[112560, 2324, 3508, 86, 270, "Input",ExpressionUUID->"05912473-8033-42df-934b-87130f855530"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116105, 2415, 91, 0, 30, "Subsubsection",ExpressionUUID->"36dbd464-3e69-4f8e-8c67-d907009a6558"],
Cell[116199, 2417, 109, 0, 30, "Text",ExpressionUUID->"61f65358-5a60-49d7-9f7e-a9bb97e41e17"],
Cell[116311, 2419, 2165, 61, 144, "Input",ExpressionUUID->"dcf6ccb3-5874-41cb-8a08-809ea53e0503"]
}, Closed]],
Cell[CellGroupData[{
Cell[118513, 2485, 109, 0, 30, "Subsubsection",ExpressionUUID->"844c34d8-94ca-4cf1-87a6-720df21c94ea"],
Cell[118625, 2487, 265, 4, 51, "Text",ExpressionUUID->"7acb3dca-08da-4795-b067-5dab190d891b"],
Cell[118893, 2493, 2373, 59, 162, "Input",ExpressionUUID->"9f2df7a2-e59b-4441-96bd-3f3a470153e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121303, 2557, 92, 0, 30, "Subsubsection",ExpressionUUID->"0d1dd2b1-b724-4eb3-afca-647c276f1092"],
Cell[121398, 2559, 676, 10, 93, "Text",ExpressionUUID->"4dd1a616-076c-4760-812b-4e1a8288e7f0"],
Cell[122077, 2571, 905, 26, 54, "Input",ExpressionUUID->"b15ad312-934c-4d7b-85bc-0ca34df4bf81"],
Cell[122985, 2599, 897, 25, 54, "Input",ExpressionUUID->"e513facb-cbc8-4e00-87d0-e1a70d5d6b70"],
Cell[123885, 2626, 265, 4, 51, "Text",ExpressionUUID->"f082f78a-9d38-4075-9e36-00fd55e8771b"],
Cell[124153, 2632, 550, 14, 72, "Input",ExpressionUUID->"f40d3e9c-e483-40c9-bb69-f84c36a52098"],
Cell[124706, 2648, 262, 4, 51, "Text",ExpressionUUID->"a8fb986f-3439-4bee-918b-5b0816a04810"],
Cell[124971, 2654, 889, 23, 72, "Input",ExpressionUUID->"9ea29673-5f8a-4a7a-9aa4-c798f783d2cb"],
Cell[125863, 2679, 131, 0, 30, "Text",ExpressionUUID->"b39dd1b4-bae4-4e80-bd62-c686c568a47e"]
}, Closed]],
Cell[CellGroupData[{
Cell[126031, 2684, 124, 0, 30, "Subsubsection",ExpressionUUID->"d7e8c142-0eba-4444-b33c-55b5cc58b74a"],
Cell[126158, 2686, 147, 2, 30, "Text",ExpressionUUID->"3b85f158-80d8-4ce8-bba8-1a51e4747b04"],
Cell[126308, 2690, 1290, 32, 144, "Input",ExpressionUUID->"985ea76b-d5ae-4847-8d9e-dcbc969e0e63"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[127647, 2728, 104, 0, 31, "Subsection",ExpressionUUID->"98bfabee-2222-47a8-8113-aa439d2d77da"],
Cell[CellGroupData[{
Cell[127776, 2732, 102, 0, 30, "Subsubsection",ExpressionUUID->"4b56c8c6-8400-43d1-a12b-602903b06b3c"],
Cell[127881, 2734, 191, 3, 30, "Text",ExpressionUUID->"ee919686-9297-47df-ad78-f0099c752dfc"],
Cell[128075, 2739, 128, 2, 35, "Input",ExpressionUUID->"81a8f5ca-bbdf-4926-b993-d4d200a6d744"],
Cell[128206, 2743, 877, 21, 126, "Input",ExpressionUUID->"32a28296-3f0c-4580-91a5-98f91d7a4beb"]
}, Closed]],
Cell[CellGroupData[{
Cell[129120, 2769, 94, 0, 30, "Subsubsection",ExpressionUUID->"d9ab2832-77b4-4f81-9ab3-b8591744c52f"],
Cell[129217, 2771, 390, 5, 51, "Text",ExpressionUUID->"f0237f3e-3017-4e65-b4a1-291d613af758"],
Cell[129610, 2778, 772, 13, 93, "Text",ExpressionUUID->"1bd94ea3-df03-4d83-974f-db3537ba5e5c"],
Cell[130385, 2793, 4304, 102, 450, "Input",ExpressionUUID->"c611b885-1c4e-47ce-9850-9d32c796521a"]
}, Closed]],
Cell[CellGroupData[{
Cell[134726, 2900, 102, 0, 30, "Subsubsection",ExpressionUUID->"e977faae-01f5-4236-b800-01b71da0ac2e"],
Cell[134831, 2902, 188, 3, 30, "Text",ExpressionUUID->"315771bb-a9ef-4d30-98d6-098728ae805b"],
Cell[135022, 2907, 1064, 26, 144, "Input",ExpressionUUID->"05bfb66e-ec46-4118-8bc0-ae21e3b5a217"],
Cell[136089, 2935, 124, 0, 30, "Text",ExpressionUUID->"9014c4fa-d02d-4506-83ea-a0b7c4412624"],
Cell[136216, 2937, 2296, 60, 144, "Input",ExpressionUUID->"ee819cb0-68f2-454a-a0f4-684cac9e626f"],
Cell[138515, 2999, 121, 0, 30, "Text",ExpressionUUID->"6afed1ed-4275-4932-a961-e5e7c1f23c30"],
Cell[138639, 3001, 1090, 26, 144, "Input",ExpressionUUID->"b296d0ea-d103-4068-8496-57429efd2956"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139778, 3033, 85, 0, 31, "Subsection",ExpressionUUID->"24b06bbb-98d3-4d0c-a718-7295f84a58d4"],
Cell[139866, 3035, 225, 3, 30, "Text",ExpressionUUID->"8c01c9d8-c2c9-409f-9add-feb45182bcf5"],
Cell[140094, 3040, 325, 9, 35, "Input",ExpressionUUID->"1867ac5c-695d-42a4-bde7-885cb8daee01"],
Cell[140422, 3051, 157, 3, 35, "Input",ExpressionUUID->"62509384-eba8-40a8-890e-0b26f46f43bd"],
Cell[140582, 3056, 536, 13, 58, "Input",ExpressionUUID->"fb91e2ee-93d3-41a3-ae78-c313e2b4a798"],
Cell[141121, 3071, 1192, 33, 114, "Input",ExpressionUUID->"6012ecc5-3227-462f-a49c-e6c8019f823f"],
Cell[142316, 3106, 133, 3, 35, "Input",ExpressionUUID->"0d30eee5-b9b0-46f6-a15b-06ad44158c2b"],
Cell[142452, 3111, 154, 3, 35, "Input",ExpressionUUID->"2432e384-cc2e-488b-ac90-ee1b846b6d04"],
Cell[142609, 3116, 539, 15, 35, "Input",ExpressionUUID->"c2ce0f44-2933-4579-9948-bd1deb547d91"],
Cell[143151, 3133, 935, 24, 72, "Input",ExpressionUUID->"3fde6f5b-1629-4bbf-9656-f0843509606b"],
Cell[144089, 3159, 173, 3, 30, "Text",ExpressionUUID->"d3e1a406-42ce-440a-a83a-ba92b7c2d67c"],
Cell[144265, 3164, 1388, 37, 90, "Input",ExpressionUUID->"248a4e42-9143-4212-a7fa-75de1b7faf40"],
Cell[145656, 3203, 831, 21, 72, "Input",ExpressionUUID->"82a3648e-bd4f-493b-bfb0-5578ca7ecf7a"],
Cell[146490, 3226, 830, 21, 72, "Input",ExpressionUUID->"d45ad4a4-321d-49cd-bf6e-62c7ca68797b"],
Cell[147323, 3249, 826, 21, 72, "Input",ExpressionUUID->"67ca826d-3c61-44b8-9e55-1a1a12b7134b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148198, 3276, 86, 0, 62, "Section",ExpressionUUID->"d2c23604-a292-44ee-87ff-043de8af44e6"],
Cell[CellGroupData[{
Cell[148309, 3280, 95, 0, 31, "Subsection",ExpressionUUID->"caf76008-1094-4dab-89d2-46ed4cc1fba0"],
Cell[148407, 3282, 290, 4, 51, "Text",ExpressionUUID->"c8309336-5c77-441b-a04c-dede3d3eca2f"],
Cell[148700, 3288, 1218, 33, 108, "Input",ExpressionUUID->"6390bb3f-b7c5-41b8-8c19-384e6427f962"],
Cell[149921, 3323, 2083, 55, 162, "Input",ExpressionUUID->"a25c713e-9ba3-4635-b13e-e69c6cdae2ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152041, 3383, 104, 0, 31, "Subsection",ExpressionUUID->"c37a253b-504f-4c0e-a54a-a3f483e112b3"],
Cell[152148, 3385, 358, 7, 51, "Text",ExpressionUUID->"a19a5c8b-94b6-4833-85b3-9a3459728609"],
Cell[152509, 3394, 1138, 30, 126, "Input",ExpressionUUID->"894db10f-0d70-4c25-857e-67b7ef9e6eef"],
Cell[153650, 3426, 899, 21, 108, "Input",ExpressionUUID->"a62e61dc-6ffe-4b22-9bfc-d7a523b7fbbf"],
Cell[154552, 3449, 201, 3, 30, "Text",ExpressionUUID->"9776aa99-8c44-4af1-b2b7-cb1030165ea4"],
Cell[154756, 3454, 570, 13, 72, "Input",ExpressionUUID->"d6f81e9c-0c49-406a-97e7-dc5900d0e9bf"],
Cell[155329, 3469, 563, 10, 72, "Text",ExpressionUUID->"8e252db5-4198-4597-a1ab-ecb857025865"],
Cell[155895, 3481, 112, 0, 30, "Text",ExpressionUUID->"e4edc6bf-77e3-4be4-babe-48bd1ae41726"],
Cell[156010, 3483, 459, 11, 35, "Input",ExpressionUUID->"98ecc5a6-5d46-4feb-9d9b-e0ebf3d9167a"],
Cell[156472, 3496, 157, 2, 30, "Text",ExpressionUUID->"4c774d77-3b73-430d-9ac3-b822f74ae385"],
Cell[156632, 3500, 797, 20, 72, "Input",ExpressionUUID->"52cc7ae3-a547-434e-892f-a1f8b53a67b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

